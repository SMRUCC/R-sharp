<?xml version="1.0"?>
<doc>
<assembly>
<name>
Microsoft.VisualBasic.Architecture.Framework_v3.0_22.0.76.201__8da45dcd8060cc9a
</name>
</assembly>
<members>
<member name="T:Microsoft.VisualBasic.CommandLine.IORedirectFile">
 <summary>
 Using this class object rather than <see cref="T:Microsoft.VisualBasic.CommandLine.IORedirect"/> is more encouraged.
 假若所建立的子进程并不需要进行终端交互，相较于<see cref="T:Microsoft.VisualBasic.CommandLine.IORedirect"/>对象，更加推荐使用本对象类型来执行。
 似乎<see cref="T:Microsoft.VisualBasic.CommandLine.IORedirect"/>对象在创建一个子进程的时候的对象IO重定向的句柄的处理有问题，所以在这里构建一个更加简单的类型对象，
 这个IO重定向对象不具备终端交互功能
 </summary>
 <remarks>先重定向到一个临时文件之中，然后再返回临时文件给用户代码</remarks>
</member>
<member name="F:Microsoft.VisualBasic.CommandLine.IORedirectFile._TempRedirect">
 <summary>
 重定向的临时文件
 </summary>
</member>
<member name="E:Microsoft.VisualBasic.CommandLine.IORedirectFile.ProcessExit">
 <summary>
 The target invoked process event has been exit with a specific return code.(目标派生子进程已经结束了运行并且返回了一个错误值)
 </summary>
 <param name="exitCode"></param>
 <param name="exitTime"></param>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.IORedirectFile.StandardOutput">
 <summary>
 目标子进程的终端标准输出
 </summary>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.IORedirectFile.CopyRedirect(System.String)">
 <summary>
 将目标子进程的标准终端输出文件复制到一个新的文本文件之中
 </summary>
 <param name="CopyToPath"></param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.IORedirectFile.Run">
 <summary>
 启动目标子进程，然后等待执行完毕并返回退出代码(请注意，在进程未执行完毕之前，整个线程会阻塞在这里)
 </summary>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.IORedirectFile.Start(System.Action)">
 <summary>
 启动子进程，但是不等待执行完毕，当目标子进程退出的时候，回调<paramref name="ProcessExitCallback"/>函数句柄
 </summary>
 <param name="ProcessExitCallback"></param>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.DelegateEntryPointInfo.Name">
 <summary>
 The usage name of this command line entry point.(本命令行对象的调用命令名称)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.DelegateEntryPointInfo.#ctor(Microsoft.VisualBasic.CommandLine.Reflection.CommandAttribute,System.Func{System.Object[],System.Int32})">
 <summary>
 不可以使用本方法初始化目标对象为实例方法的类型
 </summary>
 <param name="attribute"></param>
 <param name="Invoke"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.DelegateEntryPointInfo.Execute(System.Object[])">
 <summary>
 
 </summary>
 <param name="parameters">数组的长度必须与目标函数的参数的数目一致，否则短于目标函数的参数的数目的数组会使用Nothing来填充缺少的部分，而多于目标函数的参数会被截断</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.CommandEntryPointInfo">
 <summary>
 The entry point data of the commands in the command line which was original loaded from the source meta data in the compiled target.(命令行命令的执行入口点)
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.CommandEntryPointInfo.InvokeOnObject">
 <summary>
 If the target invoked <see cref="P:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.CommandEntryPointInfo.MethodEntryPoint">method delegate</see> is a instance method, 
 then this property value should be the target object instance which has the method delegate.
 (假若目标方法不是共享的方法，则必须要使用本对象来进行Invoke的调用)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.CommandEntryPointInfo.IsInstanceMethod">
 <summary>
 The shared method did not requires of the object instance.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.CommandEntryPointInfo.EntryPointFullName">
 <summary>
 The full name path of the target invoked method delegate in the namespace library.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.CommandEntryPointInfo.NULL">
 <summary>
 The null string value.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.CommandEntryPointInfo.#ctor(Microsoft.VisualBasic.CommandLine.Reflection.CommandAttribute,System.Reflection.MethodInfo,System.Boolean)">
 <summary>
 假若目标方法为实例方法，请使用本方法进行初始化
 </summary>
 <param name="attribute"></param>
 <param name="Invoke"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.CommandEntryPointInfo.HelpInformation">
 <summary>
 Returns the help information details for this command line entry object.(获取本命令行执行入口点的详细帮助信息)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.CommandEntryPointInfo.Invoke(System.Object[],System.Object,System.Boolean)">
 <summary>
 Invoke this command line and returns the function value.(函数会补齐可选参数)
 </summary>
 <param name="parameters">The function parameter for the target invoked method, the optional value will be filled 
 using the paramter default value if you are not specific the optional paramter value is the element position of 
 this paramter value.</param>
 <param name="target">Target entry pointer of this function method delegate.</param>
 <param name="Throw">If throw then if the exception happened from delegate invocation then the program will throw an 
 exception and terminated, if not then the program will save the exception information into a log file and then 
 returns a failure status.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.CommandEntryPointInfo.InternalCommandLineInvoke(System.Object[],System.Object,System.Boolean)">
 <summary>
 Invoke this command line but returns the function execute success, Zero for success and -1 for failure.(函数会补齐可选参数)
 </summary>
 <param name="parameters"></param>
 <param name="target"></param>
 <param name="Throw"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.CommandLine.Reflection.Namespace">
 <summary>
 (CommandLine interpreter executation Entry and the ShellScript software packages namespace.)这是一个命令行解释器所使用的执行入口点的集合
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.Namespace.Description">
 <summary>
 A brief description text about the function of this namespace.(关于本模块之中的描述性的摘要文本)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.Namespace.Namespace">
 <summary>
 The name value of this namespace module.(本命名空间模块的名称值)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Reflection.Namespace.#ctor(System.String,System.String)">
 <summary>
 The name value of this namespace module.(本命名空间模块的名称值)
 </summary>
 <param name="Namespace">The name value of this namespace module.(本命名空间模块的名称值)</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Reflection.Namespace.CreateInstance(System.Type)">
 <summary>
 从目标类型之中构造出一个命令行解释器
 </summary>
 <param name="Type"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.CommandLine.Reflection.CommandAttribute">
 <summary>
 A command object that with a specific name.(一个具有特定名称命令执行对象)
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.CommandAttribute.Name">
 <summary>
 The name of the commandline object.(这个命令的名称)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.CommandAttribute.Info">
 <summary>
 Something detail of help information.(详细的帮助信息)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.CommandAttribute.Usage">
 <summary>
 The usage of this command.(这个命令的用法，本属性仅仅是一个助记符，当用户没有编写任何的使用方法信息的时候才会使用本属性的值)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.CommandAttribute.Example">
 <summary>
 A example that to useing this command.(对这个命令的使用示例，本属性仅仅是一个助记符，当用户没有编写任何示例信息的时候才会使用本属性的值)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Reflection.CommandAttribute.#ctor(System.String)">
 <summary>
 
 </summary>
 <param name="Name">The name of the commandline object.(这个命令的名称)</param>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.CommandLine.Reflection.Optional">
 <summary>
 Optional commandline arguments.(本属性标记一个命令行字符串之中的可选参数)
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.CommandLine.Reflection.Optional.Types">
 <summary>
 The data type enumeration of the target optional parameter switch.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.CommandLine.Reflection.Optional.Types.String">
 <summary>
 String
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.CommandLine.Reflection.Optional.Types.Integer">
 <summary>
 Int
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.CommandLine.Reflection.Optional.Types.Double">
 <summary>
 Real
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Reflection.Optional.#ctor(System.String,Microsoft.VisualBasic.CommandLine.Reflection.Optional.Types)">
 <summary>
 
 </summary>
 <param name="Name">The name value of the target parameter switch which will be marked as an optional parameter.
 (目标将要被标记为可选参数的命令行参数开关对象)</param>
 <param name="Type">The data type of the target command line parameter switch, default type is string type.</param>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.CommandLine.Reflection.Optional._InternalTypesConvertors">
 <summary>
 对类型的转换方法进行枚举
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Reflection.Optional.Generate``1(``0)">
 <summary>
 Generates the command line string value for the invoked target cli program using this interop services object instance.
 </summary>
 <typeparam name="InteropService">
 A class type object for interaction with a commandline program.
 (与命令行程序进行交互的模块对象类型)
 </typeparam>
 <param name="Instance">目标交互对象的实例</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Reflection.Optional.ClearParameters``1(``0)">
 <summary>
 
 </summary>
 <typeparam name="TInteropService"></typeparam>
 <param name="Instance"></param>
 <returns>返回所重置的参数的个数</returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.CommandLine.Reflection.ParameterDescription">
 <summary>
 Use for the detail description for a specific commandline switch.(用于对某一个命令的开关参数的具体描述帮助信息)
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.ParameterDescription.Name">
 <summary>
 The name of this command line parameter switch.(该命令开关的名称)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.ParameterDescription.Description">
 <summary>
 The description and brief help information about this parameter switch, 
 you can using the \n escape string to gets a VbCrLf value.
 (对这个开关参数的具体的描述以及帮助信息，可以使用\n转义字符进行换行)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.ParameterDescription.Example">
 <summary>
 The usage example of this parameter switch.(该开关的值的示例)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.ParameterDescription.Usage">
 <summary>
 The usage syntax information about this parameter switch.(本开关参数的使用语法)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.ParameterDescription.Optional">
 <summary>
 Is this parameter switch is an optional value.(本开关是否为可选的参数)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Reflection.ParameterDescription.#ctor(System.String,System.Boolean)">
 <summary>
 
 </summary>
 <param name="Name">The name of this command line parameter switch.(该命令开关的名称)</param>
 <param name="Optional">Is this parameter switch is an optional value.(本开关是否为可选的参数)</param>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.CommandLine.Reflection.InternalParameterSwitchCollection">
 <summary>
 The help information for a specific command line parameter switch.(某一个指定的命令的开关的帮助信息)
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.InternalParameterSwitchCollection.Count">
 <summary>
 本命令行对象中的包含有帮助信息的开关参数的数目
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.InternalParameterSwitchCollection.Switch(System.String)">
 <summary>
 Returns the parameter switch help information with the specific name value.(显示某一个指定名称的开关信息)
 </summary>
 <param name="Name"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Reflection.InternalParameterSwitchCollection.GetExample">
 <summary>
 Gets the usage example of this parameter switch.(获取本参数开关的帮助信息)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Reflection.InternalParameterSwitchCollection.ToString">
 <summary>
 显示所有的开关信息
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.CommandLine.ObInst_Interpreter">
 <summary>
 Interpreter for object instance.(对于<see cref="T:Microsoft.VisualBasic.CommandLine.Interpreter"></see>而言，其仅解析静态的方法，二本对象则实例方法和静态方法都进行解析)
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.ObInst_Interpreter.#ctor(System.Object)">
 <summary>
 
 </summary>
 <param name="obj">An instance object.</param>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.CommandLine.Interpreter">
 <summary>
 Command line interpreter for your cli program.(命令行解释器)
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.ToDictionary">
 <summary>
 Gets the dictionary data which contains all of the available command information in this assembly module.
 (获取从本模块之中获取得到的所有的命令行信息) 
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.Execute(Microsoft.VisualBasic.CommandLine.CommandLine)">
 <summary>
 Execute the specific command line using this interpreter.
 </summary>
 <param name="CommandLine">The user input command line string.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.SDKdocs">
 <summary>
 Generate the sdk document for the target program assembly.(生成目标应用程序的命令行帮助文档)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.Execute(System.String[])">
 <summary>
 Process the command option arguments of the main function:
 <code>Public Function Main(argvs As String()) As Integer
 </code>
 </summary>
 <param name="CommandLineArgs">The cli command line parameter string value collection.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.Add(Microsoft.VisualBasic.CommandLine.Reflection.EntryPoints.CommandEntryPointInfo)">
 <summary>
 Add a command in current cli interpreter.(x向当前的这个CLI命令行解释器之中添加一个命令)
 </summary>
 <param name="Command"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.Help(System.String)">
 <summary>
 Gets the help information of a specific command using its name property value.(获取某一个命令的帮助信息)
 </summary>
 <param name="CommandName">If the paramteer command name value is a empty string then this function 
 will list all of the commands' help information.(假若本参数为空则函数会列出所有的命令的帮助信息)</param>
 <returns>Error code, ZERO for no error</returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.HelpSummary">
 <summary>
 Returns the summary brief help information of all of the commands in current cli interpreter.
 (枚举出本CLI解释器之中的所有的命令的帮助的摘要信息)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Interpreter.ListCommandInfo">
 <summary>
 Returns the command entry info list array.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.#ctor(System.Type)">
 <summary>
 
 </summary>
 <param name="Type">A module or a class which contains some shared method for the command entry.
 (包含有若干使用<see cref="T:Microsoft.VisualBasic.CommandLine.Reflection.CommandAttribute"></see>进行标记的命令行执行入口点的Module或者Class对象类型，
 可以使用 Object.GetType/GetType 关键词操作来获取所需要的类型信息)</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.CreateEmptyCLIObject">
 <summary>
 Create an empty cli command line interpreter object which contains no commands entry.(创建一个没有包含有任何命令入口点的空的CLI命令行解释器)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.CreateInstance(System.Type)">
 <summary>
 Create a new interpreter instance from a specific type information.(从目标类型之中构造出一个命令行解释器)
 </summary>
 <param name="Type"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.CreateInstance``1">
 <summary>
 Create a new interpreter instance using the specific type information.(使用所制定的目标类型信息构造出一个CLI命令行解释器)
 </summary>
 <typeparam name="T"></typeparam>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.CreateInstance(System.String)">
 <summary>
 Create a new interpreter instance from a specific dll/exe path, this program assembly file should be a standard .NET assembly.
 (从一个标准的.NET程序文件之中构建出一个命令行解释器)
 </summary>
 <param name="AssemblyPath">DLL/EXE file path.(标准的.NET程序集文件的文件路径)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.Clear">
 <summary>
 Clear the hash table of the cli command line interpreter command entry points.(清除本CLI解释器之中的所有的命令行执行入口点的哈希数据信息) 
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Interpreter.Count">
 <summary>
 Gets the command counts in current cli interpreter.(返回本CLI命令行解释器之中所包含有的命令的数目)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.Interpreter.ExistsCommand(System.String)">
 <summary>
 The target command line command is exists in this cli interpreter using it name property?(判断目标命令行命令是否存在于本CLI命令行解释器之中)
 </summary>
 <param name="CommandName">The command name value is not case sensitive.(命令的名称对大小写不敏感的)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.Interpreter.ListCommandsEntryName">
 <summary>
 List all of the command line entry point name which were contains in this cli interpreter.
 (列举出本CLI命令行解释器之中的所有的命令行执行入口点的名称)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.CommandLine.CommandLine">
 <summary>
 A command line object that parse from the user input commandline string.
 (从用户所输入的命令行字符串之中解析出来的命令行对象，标准的命令行格式为：
 <example>&lt;EXE> &lt;CLI_Name> ["Parameter" "Value"]</example>)
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.Name">
 <summary>
 The command name that parse from the input command line.
 (从输入的命令行中所解析出来的命令的名称)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.Tokens">
 <summary>
 The command tokens that were parsed from the input commandline.
 (从所输入的命令行之中所解析出来的命令参数单元)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.Parameters">
 <summary>
 The parameters in the commandline without the first token of the command name.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.CLICommandArgvs">
 <summary>
 Get the original command line string.(获取所输入的命令行对象的原始的字符串)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.Item(System.String)">
 <summary>
 开关的名称是不区分大小写的
 </summary>
 <param name="SwitchName"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.ToString">
 <summary>
 Returns the original cli command line argument string.(返回所传入的命令行的原始字符串)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetCommandsOverview">
 <summary>
 Gets the brief summary information of current cli command line object.(获取当前的命令行对象的参数摘要信息)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.CheckMissingRequiredParameters(System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 Checking for the missing required parameter, this function will returns the missing parameter 
 in the current cli command line object using a specific parameter name list.
 (检查<paramref name="list"></paramref>之中的所有参数是否存在，函数会返回不存在的参数名)
 </summary>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.ReGenrate(System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 ReGenerate the cli command line argument string text.(重新生成命令行字符串)
 </summary>
 <param name="tokens"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.TryParse(System.String,System.Boolean)">
 <summary>
 Try parsing the cli command string from the string value.(尝试着从文本行之中解析出命令行参数信息)
 </summary>
 <param name="CommandLine"></param>
 <param name="DuplicatedAllowed">是否允许有重复名称的参数名出现，默认是不允许的</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.CreateParameterSwitchValues(System.String[])">
 <summary>
 
 </summary>
 <param name="data">个数为偶数的</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.CommandLine.CommandLine.SPLIT_REGX_EXPRESSION">
 <summary>
 A regex expression string that use for split the commandline text.
 (用于分析命令行字符串的正则表达式)
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.IsNullOrEmpty">
 <summary>
 Does this cli command line object contains any parameter argument information.(查看本命令行参数对象之中是否存在有参数信息)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.GetTokens(System.String)">
 <summary>
 Try parse the argument tokens which comes from the user input commandline string. 
 (尝试从用户输入的命令行字符串之中解析出所有的参数)
 </summary>
 <param name="CommandLine"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.CommandLine.TryParse(System.String,System.String,System.Char)">
 <summary>
 尝试从输入的语句之中解析出词法单元，注意，这个函数不是处理从操作系统所传递进入的命令行语句
 </summary>
 <param name="CommandLine"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.CommandLine.CommandLine.InteropService">
 <summary>
 The class object which can interact with the target commandline program.(与目标命令行程序进行命令行交互的编程接口，本类型的对象的作用主要是生成命令行参数)
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.CommandLine.CommandLine.InteropService._InternalExecutableAssembly">
 <summary>
 Assembly path for the target invoked program.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.CommandLine.Count">
 <summary>
 Get the switch counts in this commandline object.(获取本命令行对象中的所定义的开关的数目)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.CommandLine.IORedirect">
 <summary>
 A communication fundation class type for the commandline program interop.(一个简单的用于从当前进程派生子进程的Wrapper对象，假若需要folk出来的子进程对象不需要终端交互功能，则更加推荐使用<see cref="T:Microsoft.VisualBasic.CommandLine.IORedirectFile"/>对象来进行调用)
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.CommandLine.IORedirect._InternalProcessStateRunning">
 <summary>
 当前的这个进程实例是否处于运行的状态
 </summary>
 <remarks></remarks>
</member>
<member name="E:Microsoft.VisualBasic.CommandLine.IORedirect.ProcessExit">
 <summary>
 The target invoked process event has been exit with a specific return code.(目标派生子进程已经结束了运行并且返回了一个错误值)
 </summary>
 <param name="exitCode"></param>
 <param name="exitTime"></param>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.IORedirect.ProcessInfo">
 <summary>
 The process invoke interface of current IO redirect operation.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.CommandLine.IORedirect.StandardOutput">
 <summary>
 Gets the standard output for the target invoke process.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.CommandLine.IORedirect.ProcessExitCallBack">
 <summary>
 A function pointer for process the events when the target invoked child process was terminated and exit.(当目标进程退出的时候所调用的过程)
 </summary>
 <param name="exitCode">The exit code for the target sub invoke process.进程的退出代码</param>
 <param name="exitTime">The exit time for the target sub invoke process.(进程的退出时间)</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.IORedirect.Start(System.Boolean,System.String[],System.Boolean)">
 <summary>
 Start the target process. If the target invoked process is currently on the running state, 
 then this function will returns the -100 value as error code and print the warning 
 information on the system console.(启动目标进程)
 </summary>
 <param name="WaitForExit">Indicate that the program code wait for the target process exit or not?(参数指示应用程序代码是否等待目标进程的结束)</param>
 <returns>当发生错误的时候会返回错误代码，当当前的进程任然处于运行的状态的时候，程序会返回-100错误代码并在终端之上打印出警告信息</returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.IORedirect.Start(Microsoft.VisualBasic.CommandLine.IORedirect.ProcessExitCallBack,System.String[],System.Boolean)">
 <summary>
 Start the target process.(启动目标进程)
 </summary>
 <returns>当发生错误的时候会返回错误代码</returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.IORedirect.InternalListenSTDOUT">
 <summary>
 输出目标子进程的标准输出设备的内容
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.IORedirect.InternalDetectProcessExit">
 <summary>
 检测目标子进程是否已经结束
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.CommandLine.IORedirect.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}[],System.Boolean,System.Boolean)">
 <summary>
 
 </summary>
 <param name="Exe"></param>
 <param name="arguments"></param>
 <param name="environment">Set up the environment variable for the target invoked child process.</param>
 <param name="_disp_debug"></param>
 <param name="disp_STDOUT">是否显示目标被调用的外部程序的标准输出</param>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.LazyLoader`2">
 <summary>
 当所需要进行加载的数据的量非常大的时候，则可以使用本方法进行延时按需加载
 </summary>
 <typeparam name="TOutput"></typeparam>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.LazyLoader`2.Value">
 <summary>
 Gets the value from the data source <see cref="P:Microsoft.VisualBasic.LazyLoader`2.URL"></see>
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.LazyLoader`2.URL">
 <summary>
 The data source.(数据源)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.LazyLoader`2.WriteData(Microsoft.VisualBasic.LazyLoader{`0,`1}.DataWriteMethod)">
 <summary>
 Write the data back onto the filesystem.(将数据回写进入文件系统之中)
 </summary>
 <param name="WriteMethod"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.Utility.Constants">
 <summary>
 Constants used with PInvoke methods
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.Utility.uCharUnion">
 <summary>
 ' Struct uChar is meant to support the Windows Console API's uChar union.
 ' Unions do not exist in the pure .NET world. We have to use the regular 
 ' C# struct and the StructLayout and FieldOffset Attributes to preserve
 ' the memory layout of the unmanaged union.
 ' 
 ' We specify the "LayoutKind.Explicit" value for the StructLayout attribute 
 ' to specify that every field of the struct uChar is marked with a byte offset.
 ' 
 ' This byte offset is specified by the FieldOffsetAttribute and it indicates
 ' the number of bytes between the beginning of the struct in memory and the
 ' beginning of the field.
 '
 ' As you can see in the struct uChar (below), the fields "UnicodeChar"
 ' and "AsciiChar" have been marked as being of offset 0. This is the only
 ' way that an unmanaged C/C++ union can be represented in C#.
 '
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.Utility.KEY_EVENT_RECORD">
 <summary>
 ' The struct KEY_EVENT_RECORD is used to report keyboard input events 
 ' in a console INPUT_RECORD structure.
 '
 ' Internally, it uses the structure uChar which is treated as a union
 ' in the unmanaged world.
 ' 
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.Utility.ConsolePasswordInput">
 <summary>
 Summary description for ConsolePasswordInput.
 </summary>
 <remarks>
 .NET Console Password Input By Masking Keyed-In Characters
 http://www.codeproject.com/Articles/8110/NET-Console-Password-Input-By-Masking-Keyed-In-Ch
 </remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.Utility.ConsolePasswordInput.PasswordInput(System.String@,System.Int32)">
 <summary>
 
 </summary>
 <param name="refPasswordToBuild"></param>
 <param name="iMaxNumberOfCharactersSet">The password max length limits.</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.Utility.ManualPages.ShowManual(System.Int32,System.Int32)">
 <summary>
 使用回车键或者箭头下显示下一行，字母q或者ESC键退出Manual
 </summary>
 <param name="initLines">最开始显示的行数</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.Utility.ManualPages.FromFile(System.String)">
 <summary>
 从文本文件之中加载Manual数据
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.Utility.IndexedManual.#ctor(System.String[],System.String)">
 <summary>
 与<see cref="T:Microsoft.VisualBasic.ConsoleDevice.Utility.ManualPages"></see>所不同的是，本对象之中的这个字符串数组表示的是一页帮助，而不是一行帮助信息
 </summary>
 <param name="Pages"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.Utility.IndexedManual.ShowManual(System.Int32,System.Int32)">
 <summary>
 使用[Enter][Down_arrow][pagedown]翻下一页[Up_arrow][Pageup]翻上一页，[q]或者[esc]结束，[home]第一页[end]最后一页
 </summary>
 <param name="initLines">无用的参数</param>
 <param name="printLines">无用的参数</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.Utility.ConsoleProcessBusyIndicator.Start(System.Int32)">
 <summary>
 运行进度条
 </summary>
 <param name="Ticks">The total ticking counts of the indicator, Unit is [second].</param>
 <remarks></remarks>
</member>
<member name="E:Microsoft.VisualBasic.ConsoleDevice.InteractiveDevice.NewOutputMessage">
 <summary>
 
 </summary>
 <param name="s"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.InteractiveDevice.#ctor(System.String)">
 <summary>
 
 </summary>
 <param name="HistoryFile">历史数据文件的存放位置，假若为空，则使用默认文件路径</param>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.InteractiveDevice.HistoryCallerStack">
 <summary>
 ReadLine函数的递归返回值
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.InteractiveDevice.Save(System.String,System.Text.Encoding)">
 <summary>
 保存历史数据
 </summary>
 <param name="Path"></param>
 <param name="encoding"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.HistoryStacks.p">
 <summary>
 指向<see cref="F:Microsoft.VisualBasic.ConsoleDevice.HistoryStacks.InternalHistoryList"></see>
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject">
 <summary>
 Represents the standard input, output, and error streams for console applications. 交互式的命令行终端
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Beep">
 <summary>
 Plays the sound of a beep through the console speaker.
 </summary>
 <remarks></remarks>
 <exception cref="T:System.Security.HostProtectionException">System.Security.HostProtectionException: This method was executed on a server, such as SQL Server, that does not permit access to a user interface.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Beep(System.Int32,System.Int32)">
 <summary>
 Plays the sound of a beep of a specified frequency and duration through the console speaker.
 </summary>
 <param name="frequency">The frequency of the beep, ranging from 37 to 32767 hertz.</param>
 <param name="duration">The duration of the beep measured in milliseconds.</param>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">frequency is less than 37 or more than 32767 hertz.-or-duration is less than or equal to zero.</exception>
 <exception cref="T:System.Security.HostProtectionException">This method was executed on a server, such as SQL Server, that does not permit access to the console.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Clear">
 <summary>
 Clears the console buffer and corresponding console window of display information.
 </summary>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 Copies a specified source area of the screen buffer to a specified destination area.
 </summary>
 <param name="sourceLeft">The leftmost column of the source area.</param>
 <param name="sourceTop">The topmost row of the source area.</param>
 <param name="sourceWidth">The number of columns in the source area.</param>
 <param name="sourceHeight">The number of rows in the source area.</param>
 <param name="targetLeft">The leftmost column of the destination area.</param>
 <param name="targetTop">The topmost row of the destination area.</param>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">One or more of the parameters is less than zero.-or- sourceLeft or targetLeft is greater than or equal to System.Console.BufferWidth.-or- sourceTop or targetTop is greater than or equal to System.Console.BufferHeight.-or- sourceTop + sourceHeight is greater than or equal to System.Console.BufferHeight.-or- sourceLeft + sourceWidth is greater than or equal to System.Console.BufferWidth.</exception>
 <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)">
 <summary>
 Copies a specified source area of the screen buffer to a specified destination area.
 </summary>
 <param name="sourceLeft">The leftmost column of the source area.</param>
 <param name="sourceTop">The topmost row of the source area.</param>
 <param name="sourceWidth">The number of columns in the source area.</param>
 <param name="sourceHeight">The number of rows in the source area.</param>
 <param name="targetLeft">The leftmost column of the destination area.</param>
 <param name="targetTop">The topmost row of the destination area.</param>
 <param name="sourceChar">The character used to fill the source area.</param>
 <param name="sourceForeColor">The foreground color used to fill the source area.</param>
 <param name="sourceBackColor">The background color used to fill the source area.</param>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">One or more of the parameters is less than zero.-or- sourceLeft or targetLeft is greater than or equal to System.Console.BufferWidth.-or- sourceTop or targetTop is greater than or equal to System.Console.BufferHeight.-or- sourceTop + sourceHeight is greater than or equal to System.Console.BufferHeight.-or- sourceLeft + sourceWidth is greater than or equal to System.Console.BufferWidth.</exception>
 <exception cref="T:System.ArgumentException">One or both of the color parameters is not a member of the System.ConsoleColor enumeration.</exception>
 <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.ResetColor">
 <summary>
 Sets the foreground and background console colors to their defaults.
 </summary>
 <remarks></remarks>
 <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.SetBufferSize(System.Int32,System.Int32)">
 <summary>
 Sets the height and width of the screen buffer area to the specified values.
 </summary>
 <param name="width">The width of the buffer area measured in columns.</param>
 <param name="height">The height of the buffer area measured in rows.</param>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">height or width is less than or equal to zero.-or- height or width is greater than or equal to System.Int16.MaxValue.-or- width is less than System.Console.WindowLeft + System.Console.WindowWidth.-or- height is less than System.Console.WindowTop + System.Console.WindowHeight.</exception>
 <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.SetCursorPosition(System.Int32,System.Int32)">
 <summary>
 Sets the position of the cursor.
 </summary>
 <param name="left">The column position of the cursor.</param>
 <param name="top">The row position of the cursor.</param>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">left or top is less than zero.-or- left is greater than or equal to System.Console.BufferWidth.-or- top is greater than or equal to System.Console.BufferHeight.</exception>
 <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.SetError(System.IO.TextWriter)">
 <summary>
 Sets the System.Console.Error property to the specified System.IO.TextWriter object.
 </summary>
 <param name="newError">A stream that is the new standard error output.</param>
 <remarks></remarks>
 <exception cref="T:System.ArgumentNullException">newError is null.</exception>
 <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.SetIn(System.IO.TextReader)">
 <summary>
 Sets the System.Console.In property to the specified System.IO.TextReader object.
 </summary>
 <param name="newIn">A stream that is the new standard input.</param>
 <remarks></remarks>
 <exception cref="T:System.ArgumentNullException">newIn is null.</exception>
 <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.SetOut(System.IO.TextWriter)">
 <summary>
 Sets the System.Console.Out property to the specified System.IO.TextWriter object.
 </summary>
 <param name="newOut">A stream that is the new standard output.</param>
 <remarks></remarks>
 <exception cref="T:System.ArgumentNullException">newOut is null.</exception>
 <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.SetWindowPosition(System.Int32,System.Int32)">
 <summary>
 Sets the position of the console window relative to the screen buffer.
 </summary>
 <param name="left">The column position of the upper left corner of the console window.</param>
 <param name="top">The row position of the upper left corner of the console window.</param>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">left or top is less than zero.-or- left + System.Console.WindowWidth is greater than System.Console.BufferWidth.-or- top + System.Console.WindowHeight is greater than System.Console.BufferHeight.</exception>
 <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.SetWindowSize(System.Int32,System.Int32)">
 <summary>
 Sets the height and width of the console window to the specified values.
 </summary>
 <param name="width">The width of the console window measured in columns.</param>
 <param name="height">The height of the console window measured in rows.</param>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">width or height is less than or equal to zero.-or- width plus System.Console.WindowLeft or height plus System.Console.WindowTop is greater than or equal to System.Int16.MaxValue. -or-width or height is greater than the largest possible window width or height for the current screen resolution and console font.</exception>
 <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.Boolean)">
 <summary>
 Writes the text representation of the specified Boolean value to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.Char[])">
 <summary>
 Writes the specified array of Unicode characters to the standard output stream.
 </summary>
 <param name="buffer">A Unicode character array.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.Char[],System.Int32,System.Int32)">
 <summary>
 Writes the specified subarray of Unicode characters to the standard output stream.
 </summary>
 <param name="buffer">An array of Unicode characters.</param>
 <param name="index">The starting position in buffer.</param>
 <param name="count">The number of characters to write.</param>
 <remarks></remarks>
 <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
 <exception cref="T:System.ArgumentOutOfRangeException">index or count is less than zero.</exception>
 <exception cref="T:System.ArgumentException">index plus count specify a position that is not within buffer.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.Char)">
 <summary>
 Writes the specified Unicode character value to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.Decimal)">
 <summary>
 Writes the text representation of the specified System.Decimal value to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.Double)">
 <summary>
 Writes the text representation of the specified double-precision floating-point value to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.Int32)">
 <summary>
 Writes the text representation of the specified 32-bit signed integer value to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.Int64)">
 <summary>
 Writes the text representation of the specified 64-bit signed integer value to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.Object)">
 <summary>
 Writes the text representation of the specified object to the standard output stream.
 </summary>
 <param name="value">The value to write, or null.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.Single)">
 <summary>
 Writes the text representation of the specified single-precision floating-point value to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.String)">
 <summary>
 Writes the specified string value to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.String,System.Object)">
 <summary>
 Writes the text representation of the specified object to the standard output stream using the specified format information.
 </summary>
 <param name="format">A composite format string (see Remarks).</param>
 <param name="arg0">An object to write using format.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
 <exception cref="T:System.ArgumentNullException">format is null.</exception>
 <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.String,System.Object,System.Object)">
 <summary>
 Writes the text representation of the specified objects to the standard output stream using the specified format information.
 </summary>
 <param name="format">A composite format string (see Remarks).</param>
 <param name="arg0">The first object to write using format.</param>
 <param name="arg1">The second object to write using format.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
 <exception cref="T:System.ArgumentNullException">format is null.</exception>
 <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.String,System.Object,System.Object,System.Object)">
 <summary>
 Writes the text representation of the specified objects to the standard output stream using the specified format information.
 </summary>
 <param name="format">A composite format string (see Remarks).</param>
 <param name="arg0">The first object to write using format.</param>
 <param name="arg1">The second object to write using format.</param>
 <param name="arg2">The third object to write using format.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
 <exception cref="T:System.ArgumentNullException">format is null.</exception>
 <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.String,System.Object[])">
 <summary>
 Writes the text representation of the specified array of objects to the standard output stream using the specified format information.
 </summary>
 <param name="format">A composite format string (see Remarks).</param>
 <param name="arg">An array of objects to write using format.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
 <exception cref="T:System.ArgumentNullException">format or arg is null.</exception>
 <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.String,System.String[])">
 <summary>
 Writes the text representation of the specified array of objects to the standard output stream using the specified format information.
 </summary>
 <param name="format">A composite format string (see Remarks).</param>
 <param name="args">An array of objects to write using format.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
 <exception cref="T:System.ArgumentNullException">format or arg is null.</exception>
 <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.UInt32)">
 <summary>
 Writes the text representation of the specified 32-bit unsigned integer value to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Write(System.UInt64)">
 <summary>
 Writes the text representation of the specified 64-bit unsigned integer value to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine">
 <summary>
 Writes the current line terminator to the standard output stream.
 </summary>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.Boolean)">
 <summary>
 Writes the text representation of the specified Boolean value, followed by the current line terminator, to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.Char[])">
 <summary>
 Writes the specified array of Unicode characters, followed by the current line terminator, to the standard output stream.
 </summary>
 <param name="buffer">A Unicode character array.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.Char[],System.Int32,System.Int32)">
 <summary>
 Writes the specified subarray of Unicode characters, followed by the current line terminator, to the standard output stream.
 </summary>
 <param name="buffer">An array of Unicode characters.</param>
 <param name="index">The starting position in buffer.</param>
 <param name="count">The number of characters to write.</param>
 <remarks></remarks>
 <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
 <exception cref="T:System.ArgumentOutOfRangeException">index or count is less than zero.</exception>
 <exception cref="T:System.ArgumentException">index plus count specify a position that is not within buffer.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.Char)">
 <summary>
 Writes the specified Unicode character, followed by the current line terminator, value to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.Decimal)">
 <summary>
 Writes the text representation of the specified System.Decimal value, followed by the current line terminator, to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.Double)">
 <summary>
 Writes the text representation of the specified double-precision floating-point value, followed by the current line terminator, to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.Int32)">
 <summary>
 Writes the text representation of the specified 32-bit signed integer value, followed by the current line terminator, to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.Int64)">
 <summary>
 Writes the text representation of the specified 64-bit signed integer value, followed by the current line terminator, to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.Object)">
 <summary>
 Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.Single)">
 <summary>
 Writes the text representation of the specified single-precision floating-point value, followed by the current line terminator, to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.String)">
 <summary>
 Writes the specified string value, followed by the current line terminator, to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.String,System.Object)">
 <summary>
 Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream using the specified format information.
 </summary>
 <param name="format">A composite format string (see Remarks).</param>
 <param name="arg0">An object to write using format.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
 <exception cref="T:System.ArgumentNullException">format is null.</exception>
 <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.String,System.Object,System.Object)">
 <summary>
 Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.
 </summary>
 <param name="format">A composite format string (see Remarks).</param>
 <param name="arg0">The first object to write using format.</param>
 <param name="arg1">The second object to write using format.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
 <exception cref="T:System.ArgumentNullException">format is null.</exception>
 <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.String,System.Object,System.Object,System.Object)">
 <summary>
 Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.
 </summary>
 <param name="format">A composite format string (see Remarks).</param>
 <param name="arg0">The first object to write using format.</param>
 <param name="arg1">The second object to write using format.</param>
 <param name="arg2">The third object to write using format.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
 <exception cref="T:System.ArgumentNullException">format is null.</exception>
 <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.String,System.Object[])">
 <summary>
 Writes the text representation of the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information.
 </summary>
 <param name="format">A composite format string (see Remarks).</param>
 <param name="arg">An array of objects to write using format.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
 <exception cref="T:System.ArgumentNullException">format or arg is null.</exception>
 <exception cref="T:System.FormatException">The format specification in format is invalid.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.UInt32)">
 <summary>
 Writes the text representation of the specified 32-bit unsigned integer value, followed by the current line terminator, to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WriteLine(System.UInt64)">
 <summary>
 Writes the text representation of the specified 64-bit unsigned integer value, followed by the current line terminator, to the standard output stream.
 </summary>
 <param name="value">The value to write.</param>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.OpenStandardError">
 <summary>
 Acquires the standard error stream.
 </summary>
 <returns>The standard error stream.</returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.OpenStandardError(System.Int32)">
 <summary>
 Acquires the standard error stream, which is set to a specified buffer size.
 </summary>
 <param name="bufferSize">The internal stream buffer size.</param>
 <returns>The standard error stream.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is less than or equal to zero.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.OpenStandardInput">
 <summary>
 Acquires the standard input stream.
 </summary>
 <returns>The standard input stream.</returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.OpenStandardInput(System.Int32)">
 <summary>
 Acquires the standard input stream, which is set to a specified buffer size.
 </summary>
 <param name="bufferSize">The internal stream buffer size.</param>
 <returns>The standard input stream.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is less than or equal to zero.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.OpenStandardOutput">
 <summary>
 Acquires the standard output stream.
 </summary>
 <returns>The standard output stream.</returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.OpenStandardOutput(System.Int32)">
 <summary>
 Acquires the standard output stream, which is set to a specified buffer size.
 </summary>
 <param name="bufferSize">The internal stream buffer size.</param>
 <returns>The standard output stream.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is less than or equal to zero.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Read">
 <summary>
 Reads the next character from the standard input stream.
 </summary>
 <returns>The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</returns>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.ReadKey">
 <summary>
 Obtains the next character or function key pressed by the user. The pressed key is displayed in the console window.
 </summary>
 <returns>A System.ConsoleKeyInfo object that describes the System.ConsoleKey constant and Unicode character, if any, that correspond to the pressed console key. The System.ConsoleKeyInfo object also describes, in a bitwise combination of System.ConsoleModifiers values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</returns>
 <remarks></remarks>
 <exception cref="T:System.InvalidOperationException">The System.Console.In property is redirected from some stream other than the console.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.ReadKey(System.Boolean)">
 <summary>
 Obtains the next character or function key pressed by the user. The pressed key is optionally displayed in the console window.
 </summary>
 <param name="intercept">Determines whether to display the pressed key in the console window. true to not display the pressed key; otherwise, false.</param>
 <returns>A System.ConsoleKeyInfo object that describes the System.ConsoleKey constant and Unicode character, if any, that correspond to the pressed console key. The System.ConsoleKeyInfo object also describes, in a bitwise combination of System.ConsoleModifiers values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</returns>
 <remarks></remarks>
 <exception cref="T:System.InvalidOperationException">The System.Console.In property is redirected from some stream other than the console.</exception>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.ReadLine">
 <summary>
 Reads the next line of characters from the standard input stream.
 </summary>
 <returns>The next line of characters from the input stream, or null if no more lines are available.</returns>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
 <exception cref="T:System.OutOfMemoryException">There is insufficient memory to allocate a buffer for the returned string.</exception>
 <exception cref="T:System.ArgumentOutOfRangeException">The number of characters in the next line of characters is greater than System.Int32.MaxValue.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.BackgroundColor">
 <summary>
 Gets or sets the background color of the console.
 </summary>
 <value></value>
 <returns>A System.ConsoleColor that specifies the background color of the console; that is, the color that appears behind each character. The default is black.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentException">The color specified in a set operation is not a valid Color.</exception>
 <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.BufferHeight">
 <summary>
 Gets or sets the height of the buffer area.
 </summary>
 <value></value>
 <returns>The current height, in rows, of the buffer area.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">The value in a set operation is less than or equal to zero.-or- The value in a set operation is greater than or equal to System.Int16.MaxValue.-or- The value in a set operation is less than System.Console.WindowTop + System.Console.WindowHeight.</exception>
 <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.BufferWidth">
 <summary>
 Gets or sets the width of the buffer area.
 </summary>
 <value></value>
 <returns>The current width, in columns, of the buffer area.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">The value in a set operation is less than or equal to zero.-or- The value in a set operation is greater than or equal to System.Int16.MaxValue.-or- The value in a set operation is less than System.Console.WindowLeft + System.Console.WindowWidth.</exception>
 <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.CapsLock">
 <summary>
 Gets a value indicating whether the CAPS LOCK keyboard toggle is turned on or turned off.
 </summary>
 <value></value>
 <returns>true if CAPS LOCK is turned on; false if CAPS LOCK is turned off.</returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.CursorLeft">
 <summary>
 Gets or sets the column position of the cursor within the buffer area.
 </summary>
 <value></value>
 <returns>The current position, in columns, of the cursor.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">The value in a set operation is less than zero.-or- The value in a set operation is greater than or equal to System.Console.BufferWidth.</exception>
 <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.CursorSize">
 <summary>
 Gets or sets the height of the cursor within a character cell.
 </summary>
 <value></value>
 <returns>The size of the cursor expressed as a percentage of the height of a character cell. The property value ranges from 1 to 100.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">The value specified in a set operation is less than 1 or greater than 100.</exception>
 <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.CursorTop">
 <summary>
 Gets or sets the row position of the cursor within the buffer area.
 </summary>
 <value></value>
 <returns>The current position, in rows, of the cursor.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">The value in a set operation is less than zero.-or- The value in a set operation is greater than or equal to System.Console.BufferHeight.</exception>
 <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.CursorVisible">
 <summary>
 Gets or sets a value indicating whether the cursor is visible.
 </summary>
 <value></value>
 <returns>true if the cursor is visible; otherwise, false.</returns>
 <remarks></remarks>
 <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Error">
 <summary>
 Gets the standard error output stream.
 </summary>
 <value></value>
 <returns>A System.IO.TextWriter that represents the standard error output stream.</returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.ForegroundColor">
 <summary>
 Gets or sets the foreground color of the console.
 </summary>
 <value></value>
 <returns>A System.ConsoleColor that specifies the foreground color of the console; that is, the color of each character that is displayed. The default is gray.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentException">The color specified in a set operation is not a valid Color.</exception>
 <exception cref="T:System.Security.SecurityException">The user does not have permission to perform this action.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.In">
 <summary>
 Gets the standard input stream.
 </summary>
 <value></value>
 <returns>A System.IO.TextReader that represents the standard input stream.</returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.InputEncoding">
 <summary>
 Gets or sets the encoding the console uses to read input.
 </summary>
 <value></value>
 <returns>The encoding used to read console input.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentNullException">The property value in a set operation is null.</exception>
 <exception cref="T:System.IO.IOException">An error occurred during the execution of this operation.</exception>
 <exception cref="T:System.Security.SecurityException">Your application does not have permission to perform this operation.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.IsErrorRedirected">
 <summary>
 Gets a value that indicates whether the error output stream has been redirected from the standard error stream.
 </summary>
 <value></value>
 <returns>true if error output is redirected; otherwise, false.</returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.IsInputRedirected">
 <summary>
 Gets a value that indicates whether input has been redirected from the standard input stream.
 </summary>
 <value></value>
 <returns>true if input is redirected; otherwise, false.</returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.IsOutputRedirected">
 <summary>
 Gets a value that indicates whether output has been redirected from the standard output stream.
 </summary>
 <value></value>
 <returns>true if output is redirected; otherwise, false.</returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.KeyAvailable">
 <summary>
 Gets a value indicating whether a key press is available in the input stream.
 </summary>
 <value></value>
 <returns>true if a key press is available; otherwise, false.</returns>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
 <exception cref="T:System.InvalidOperationException">Standard input is redirected to a file instead of the keyboard.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.LargestWindowHeight">
 <summary>
 Gets the largest possible number of console window rows, based on the current font and screen resolution.
 </summary>
 <value></value>
 <returns>The height of the largest possible console window measured in rows.</returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.LargestWindowWidth">
 <summary>
 Gets the largest possible number of console window columns, based on the current font and screen resolution.
 </summary>
 <value></value>
 <returns>The width of the largest possible console window measured in columns.</returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.NumberLock">
 <summary>
 Gets a value indicating whether the NUM LOCK keyboard toggle is turned on or turned off.
 </summary>
 <value></value>
 <returns>true if NUM LOCK is turned on; false if NUM LOCK is turned off.</returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Out">
 <summary>
 Gets the standard output stream.
 </summary>
 <value></value>
 <returns>A System.IO.TextWriter that represents the standard output stream.</returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.OutputEncoding">
 <summary>
 Gets or sets the encoding the console uses to write output.
 </summary>
 <value></value>
 <returns>The encoding used to write console output.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentNullException">The property value in a set operation is null.</exception>
 <exception cref="T:System.IO.IOException">An error occurred during the execution of this operation.</exception>
 <exception cref="T:System.Security.SecurityException">Your application does not have permission to perform this operation.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.Title">
 <summary>
 Gets or sets the title to display in the console title bar.
 </summary>
 <value></value>
 <returns>The string to be displayed in the title bar of the console. The maximum length of the title string is 24500 characters.</returns>
 <remarks></remarks>
 <exception cref="T:System.InvalidOperationException">In a get operation, the retrieved title is longer than 24500 characters.</exception>
 <exception cref="T:System.ArgumentOutOfRangeException">In a set operation, the specified title is longer than 24500 characters.</exception>
 <exception cref="T:System.ArgumentNullException">In a set operation, the specified title is null.</exception>
 <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.TreatControlCAsInput">
 <summary>
 Gets or sets a value indicating whether the combination of the System.ConsoleModifiers.Control modifier key and System.ConsoleKey.C console key (Ctrl+C) is treated as ordinary input or as an interruption that is handled by the operating system.
 </summary>
 <value></value>
 <returns>true if Ctrl+C is treated as ordinary input; otherwise, false.</returns>
 <remarks></remarks>
 <exception cref="T:System.IO.IOException">Unable to get or set the input mode of the console input buffer.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WindowHeight">
 <summary>
 Gets or sets the height of the console window area.
 </summary>
 <value></value>
 <returns>The height of the console window measured in rows.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">The value of the System.Console.WindowWidth property or the value of the System.Console.WindowHeight property is less than or equal to 0.-or-The value of the System.Console.WindowHeight property plus the value of the System.Console.WindowTop property is greater than or equal to System.Int16.MaxValue.-or-The value of the System.Console.WindowWidth property or the value of the System.Console.WindowHeight property is greater than the largest possible window width or height for the current screen resolution and console font.</exception>
 <exception cref="T:System.IO.IOException">Error reading or writing information.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WindowLeft">
 <summary>
 Gets or sets the leftmost position of the console window area relative to the screen buffer.
 </summary>
 <value></value>
 <returns>The leftmost console window position measured in columns.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">In a set operation, the value to be assigned is less than zero.-or-As a result of the assignment, System.Console.WindowLeft plus System.Console.WindowWidth would exceed System.Console.BufferWidth.</exception>
 <exception cref="T:System.IO.IOException">Error reading or writing information.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WindowTop">
 <summary>
 Gets or sets the top position of the console window area relative to the screen buffer.
 </summary>
 <value></value>
 <returns>The uppermost console window position measured in rows.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">In a set operation, the value to be assigned is less than zero.-or-As a result of the assignment, System.Console.WindowTop plus System.Console.WindowHeight would exceed System.Console.BufferHeight.</exception>
 <exception cref="T:System.IO.IOException">Error reading or writing information.</exception>
</member>
<member name="P:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.WindowWidth">
 <summary>
 Gets or sets the width of the console window.
 </summary>
 <value></value>
 <returns>The width of the console window measured in columns.</returns>
 <remarks></remarks>
 <exception cref="T:System.ArgumentOutOfRangeException">The value of the System.Console.WindowWidth property or the value of the System.Console.WindowHeight property is less than or equal to 0.-or-The value of the System.Console.WindowHeight property plus the value of the System.Console.WindowTop property is greater than or equal to System.Int16.MaxValue.-or-The value of the System.Console.WindowWidth property or the value of the System.Console.WindowHeight property is greater than the largest possible window width or height for the current screen resolution and console font.</exception>
 <exception cref="T:System.IO.IOException">Error reading or writing information.</exception>
</member>
<member name="E:Microsoft.VisualBasic.ConsoleDevice.I_SystemConsoleObject.CancelKeyPress">
 <summary>
 Occurs when the System.ConsoleModifiers.Control modifier key (Ctrl) and either the System.ConsoleKey.C console key (C) or the Break key are pressed simultaneously (Ctrl+C or Ctrl+Break).
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.Shell.Shell(System.String,System.Diagnostics.ProcessWindowStyle,System.Boolean)">
 <summary>
 
 </summary>
 <param name="CommandLine"></param>
 <param name="WindowStyle"></param>
 <param name="WaitForExit">If NOT, then the function returns the associated process id value. Else returns the process exit code.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_ConsoleDeviceHandle">
 <summary>
 Represents the standard input, output, and error streams for console applications.(表示一个输入输出流控制台界面接口)
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_ConsoleDeviceHandle.WriteLine(System.String)">
 <summary>
 Writes the specified string value, followed by the current line terminator, to the standard output stream.
 (将指定的字符串值（后跟当前行终止符）写入输出流。)
 </summary>
 <param name="s"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_ConsoleDeviceHandle.WriteLine(System.String,System.String[])">
 <summary>
 Writes the text representation of the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information.
 (将指定的字符串值（后跟当前行终止符）写入输出流。)
 </summary>
 <param name="s"></param>
 <param name="args"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_ConsoleDeviceHandle.ReadLine">
 <summary>
 Reads the next line of characters from the standard input stream.(从输入流读取下一行字符)
 </summary>
 <returns>The next line of characters from the input stream, or null if no more lines are available.</returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_ConsoleDeviceHandle.Read">
 <summary>
 Reads the next character from the standard input stream.(从输入流读取下一个字符)
 </summary>
 <returns>The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.IFormatProvider">
 <summary>
 对字符串进行格式控制输出的类对象所必须实现的格式输出接口
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.IFormatProvider.ActionFormat(System.String,System.String)">
 <summary>
 将一个输入的字符串按照用户指定的格式进行格式化后返回
 </summary>
 <param name="_format">指定的格式字符串</param>
 <param name="value">输入的值</param>
 <returns>经过格式化之后的字符串</returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.g">
 <summary>
 g格式符：它将根据数值的大小，自动选用f格式或e格式输出数据，并且它不输出无意义的0
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.P">
 <summary>
 %%格式，直接返回一个字符'%'
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.e">
 <summary>
 e格式符：以指数形式输出实数
 </summary>
 <remarks>
 'e格式符：以指数形式输出实数
 '+----------+----------------------------------------------------------------------+
 '   %e        按规范化指数形式输出实数，系统自动给出6位小数，指数部分占5位
 '   %m.ne     与前面的叙述相同
 '   %-m.ne    与前面的叙述相同 
 '+---------------------------------------------------------------------------------+
 </remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.e._m_ne">
 <summary>
 %m.ne
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.e.__m_ne">
 <summary>
 %-m.ne
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.e.FormatString(System.String,System.String)">
 <summary>
 
 </summary>
 <param name="_format"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.e._m_nef(System.Int32,System.Int32,System.String,System.Int32)">
 <summary>
 %m.ne
 </summary>
 <param name="m"></param>
 <param name="n"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.e.__m_nef(System.Int32,System.Int32,System.String,System.Int32)">
 <summary>
 %-m.ne
 </summary>
 <param name="m"></param>
 <param name="n"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.f">
 <summary>
 f格式符：按实数格式输出
 </summary>
 <remarks>
 'f格式符：按实数格式输出。
 '+----------+------------------------------------------------------------------------------------+
 '   %f         整数部分全部显示出来,小数部分显示6位.但并不是显示的所有数字都是有效数字
 '   %m.nf      指定数据的宽度共为m列,其中有n位小数.如果数值长度小于m，则左侧补空格。
 '   %-m.nf     与%m.f类似，只是应在右侧补空格
 '+-----------------------------------------------------------------------------------------------+
 </remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.f._m_nf">
 <summary>
 %m.nf
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.f.__m_nf">
 <summary>
 %-m.nf
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.f.Default">
 <summary>
 默认的小数位长度为6位
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.f.FormatString(System.String,System.String)">
 <summary>
 
 </summary>
 <param name="_format"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.f.df(System.Int32,System.String)">
 <summary>
 控制小数的位数后输出
 </summary>
 <param name="n"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.f.__m_nff(System.Int32,System.Int32,System.String)">
 <summary>
 %-m.nf
 </summary>
 <param name="m"></param>
 <param name="n"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.f._m_nff(System.Int32,System.Int32,System.String)">
 <summary>
 %m.nf
 </summary>
 <param name="m"></param>
 <param name="n"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.f.pIntr(System.String)">
 <summary>
 解析整数部分
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.f.pDeci(System.Int32,System.String)">
 <summary>
 解析小数部分
 </summary>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.s">
 <summary>
 s格式符：用来输出一个字符串
 </summary>
 <remarks>
 's格式符：用来输出一个字符串
 '+----------+------------------------------------------------------------------------------------+
 '   %s         用来输出一个字符串，不含双引号. 例:printf("%s","CHINA");
 '   %ms        m指定宽度（字符串长度小于m时左补空格，大于时按实际宽度输出）
 '   %-ms       左对齐，不足m时右补空格
 '   %m.ns      输出占m列，只取字符串中左端n个字符．这n各字符输出在m列的右侧，左补空格．
 '   %-m.ns     同上，右补空格 
 '+-----------------------------------------------------------------------------------------------+
 </remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.s._ms">
 <summary>
 %ms
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.s.__ms">
 <summary>
 %-ms
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.s._m_ns">
 <summary>
 %m.ns
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.s.__m_ns">
 <summary>
 %-m.ns
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.s.FormatString(System.String,System.String)">
 <summary>
 
 </summary>
 <param name="_format"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.s.__m_nsf(System.Int32,System.Int32,System.String)">
 <summary>
 %-m.ns
 </summary>
 <param name="m"></param>
 <param name="n"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.s._m_nsf(System.Int32,System.Int32,System.String)">
 <summary>
 %m.ns
 </summary>
 <param name="m"></param>
 <param name="n"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.s.__msf(System.Int32,System.String)">
 <summary>
 %-ms
 </summary>
 <param name="m"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.s._msf(System.Int32,System.String)">
 <summary>
 %ms
 </summary>
 <param name="m"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.c">
 <summary>
 c格式符：用来输出一个字符。一个整数，其值在0～255之间时也可以以字符的格式输出
 </summary>
 <remarks>一个整数，若其值在0～255范围内，也可以用字符形式输出，在输出前，将该整数转换为对应的ASCII字符。反之，一个字符数据也可以用整数形式输出</remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.u">
 <summary>
 u格式符：以十进制数形式输出unsigned的整数
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.x">
 <summary>
 x格式符：按十六进制格式输出整数。(不会出现负数格式) 
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.o">
 <summary>
 o(字母)格式符：按八进制格式输出整数。(不会出现负数格式)
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.b">
 <summary>
 b格式符：按照二进制格式输出整数
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.d">
 <summary>
 d格式符：按十进制格式输出
 </summary>
 <remarks>
 'd格式符：按十进制格式输出
 '+-------------+----------------------------------------------------------------------------------------------------------+
 '  %d              输出数字长度为变量数值的实际长度 
 '  %md             m指定输出数据的宽度。当数据本身的实际宽度小于m时，则数据左端补空格；若大于m，则按数据的实际位数输出。 
 '  %ld, %mld       l(小写字母L)表示输出“长整型”数据 
 '  %0md, %0mld     0(数字0)表示位数不足m时补0 
 '+------------------------------------------------------------------------------------------------------------------------+
 '  注：%后面的m(位数控制)、0（位数不足补0）对于其他格式符也适用。 
 </remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.d._md">
 <summary>
 %md
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.d._mld">
 <summary>
 %mld
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.d._0md">
 <summary>
 %0md
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.d._0mld">
 <summary>
 %0mld
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.d.FormatString(System.String,System.String)">
 <summary>
 
 </summary>
 <param name="_format"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.d._mldf(System.Int32,System.String)">
 <summary>
 %md or %mld
 </summary>
 <param name="m"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.d._0mldf(System.Int32,System.String)">
 <summary>
 %0md or %0mld
 </summary>
 <param name="m"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO__.I_FormatProvider.d.Zero(System.Int32)">
 <summary>
 获得含有指定数目的字符0的字符串
 </summary>
 <param name="m"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.STDIO">
 <summary>
 A standard input/output compatibility package that makes VisualBasic console 
 program easily running on the Linux server or mac osx operating system.
 (一个用于让VisualBasic应用程序更加容易的运行于Linux服务器或者MAC系统之上的标准输入输出流的系统兼容包)
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.STDIO.IFormater">
 <summary>
 A dictionary list of the method of format a string provider class object. 
 (标准输入输出对象的格式化方法所提供的对象的字典)
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConsoleDevice.STDIO.Eschs">
 <summary>
 A dictionary list of the escape characters.(转义字符列表)
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConsoleDevice.STDIO.SystemConsoleDevice">
 <summary>
 <see cref="T:System.Console"></see>系统终端对象
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO.Format(System.String,System.String[])">
 <summary>
 Formatting a string using some formation arguments.(使用一些指定的格式化参数来格式化一个字符串)
 </summary>
 <param name="s"></param>
 <param name="Args"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO.Printfn(System.String,System.String[])">
 <summary>
 Output the string to the console using a specific formation.(按照指定的格式将字符串输出到终端窗口之上)
 </summary>
 <param name="s">A string to print on the console window.(输出到终端窗口之上的字符串)</param>
 <param name="Args">Formation parameters.(格式化参数)</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO.cat(System.String[])">
 <summary>
 不换行
 </summary>
 <param name="out"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConsoleDevice.STDIO.Scanf(System.String@)">
 <summary>
 Read the string that user input on the console to the function paramenter.
 (将用户在终端窗口之上输入的数据赋值给一个字符串变量)
 </summary>
 <param name="s"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.RelayCommand">
 <summary>
 Taken from http://msdn.microsoft.com/en-us/magazine/dd419663.aspx
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.CliResCommon.#ctor(System.String,System.Type)">
 <summary>
 
 </summary>
 <param name="DataCache">资源文件的数据缓存文件夹</param>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.CliResCommon.TryRelease(System.String,System.String)">
 <summary>
 
 </summary>
 <param name="Name">使用 NameOf 操作符来获取资源</param>
 <returns></returns>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.MailContents.Attatchments">
 <summary>
 The path list of the attachments file.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.MailContents.Logo">
 <summary>
 The file path of the logo image.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.WrapperClassTools.Net.LANTools">
 <summary>
 http://www.codeproject.com/Tips/358946/Retrieving-IP-and-MAC-addresses-for-a-LAN
 </summary>
 <code>
 ' Get my PC IP address
 Call Console.WriteLine("My IP : {0}", GetIPAddress())
 
 ' Get My PC MAC address
 Call Console.WriteLine("My MAC: {0}", GetMacAddress())
 
 ' Get all devices on network
 Dim all As Dictionary(Of IPAddress, PhysicalAddress) = GetAllDevicesOnLAN()
 For Each kvp As KeyValuePair(Of IPAddress, PhysicalAddress) In all
     Console.WriteLine("IP : {0}" &amp; vbLf &amp; " MAC {1}", kvp.Key, kvp.Value)
 Next
 </code>
</member>
<member name="T:Microsoft.VisualBasic.WrapperClassTools.Net.LANTools.MIB_IPNETROW">
 <summary>
 MIB_IPNETROW structure returned by GetIpNetTable
 DO NOT MODIFY THIS STRUCTURE.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.LANTools.GetIpNetTable(System.IntPtr,System.Int32@,System.Boolean)">
 <summary>
 GetIpNetTable external method
 </summary>
 <param name="pIpNetTable"></param>
 <param name="pdwSize"></param>
 <param name="bOrder"></param>
 <returns></returns>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.LANTools.ERROR_INSUFFICIENT_BUFFER">
 <summary>
 Error codes GetIpNetTable returns that we recognise
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.LANTools.GetAllDevicesOnLAN">
 <summary>
 Get the IP and MAC addresses of all known devices on the LAN
 </summary>
 <remarks>
 1) This table is not updated often - it can take some human-scale time 
    to notice that a device has dropped off the network, or a new device
    has connected.
 2) This discards non-local devices if they are found - these are multicast
    and can be discarded by IP address range.
 </remarks>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.LANTools.GetIPAddress">
 <summary>
 Gets the IP address of the current PC
 </summary>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.LANTools.GetMacAddress">
 <summary>
 Gets the MAC address of the current PC.
 </summary>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.LANTools.IsMulticast(System.Net.IPAddress)">
 <summary>
 Returns true if the specified IP address is a multicast address
 </summary>
 <param name="ip"></param>
 <returns></returns>
</member>
<member name="T:Microsoft.VisualBasic.WrapperClassTools.Net.PingUtility">
 <summary>
 http://www.codeproject.com/Articles/18635/Ping-exe-replica-in-C
 
 Ping.exe replica in C# 2.0

 Stefan Prodan, 3 May 2007 CPOL
 Usage example of the System.Net.NetworkInformation.Ping.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.PingUtility.Ping(System.Net.IPAddress,System.UInt32)">
 <summary>
 返回与目标远程机器之间的平均通信时间长度
 </summary>
 <param name="IP"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket">
 <summary>
 Socket listening object which is running at the server side asynchronous able multiple threading.
 (运行于服务器端上面的Socket监听对象，多线程模型)
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket._InternalRequestHandler">
 <summary>
 这个函数指针用于处理来自于客户端的请求
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket._LocalPort">
 <summary>
 Socket对象监听的端口号
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket.LocalPort">
 <summary>
 The server services listening on this local port.(当前的这个服务器对象实例所监听的本地端口号)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket.RequestHandler">
 <summary>
 This function pointer using for the data request handling of the data request from the client socket.
 (这个函数指针用于处理来自于客户端的请求)
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket.#ctor(Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.DataResponseHandler,System.Int32,Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.ExceptionHandler)">
 <summary>
 消息处理的方法接口： Public Delegate Function DataResponseHandler(str As String, RemotePort As Integer) As String
 </summary>
 <param name="DataArrivalEventHandler">Public Delegate Function DataResponseHandler(str As String, RemotePort As Integer) As String</param>
 <param name="LocalPort">监听的本地端口号，假若需要进行端口映射的话，则可以在<see cref="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket.Run"></see>方法之中设置映射的端口号</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket.BeginListen(Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.DataResponseHandler,System.Int32,Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.ExceptionHandler)">
 <summary>
 函数返回Socket的注销方法
 </summary>
 <param name="DataArrivalEventHandler">Public Delegate Function DataResponseHandler(str As String, RemotePort As Integer) As String</param>
 <param name="LocalPort"></param>
 <param name="exHandler"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket.Run">
 <summary>
 This server waits for a connection and then uses  asychronous operations to
 accept the connection, get data from the connected client,
 echo that data back to the connected client.
 It then disconnects from the client and waits for another client.(请注意，当服务器的代码运行到这里之后，代码将被阻塞在这里)
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket.Run(System.Net.IPEndPoint)">
 <summary>
 This server waits for a connection and then uses  asychronous operations to
 accept the connection, get data from the connected client,
 echo that data back to the connected client.
 It then disconnects from the client and waits for another client.(请注意，当服务器的代码运行到这里之后，代码将被阻塞在这里)
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket.Send(System.Net.Sockets.Socket,System.String)">
 <summary>
 Server reply the processing result of the request from the client.
 </summary>
 <param name="handler"></param>
 <param name="data"></param>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket.SERVER_INTERNAL_EXCEPTION">
 <summary>
 Server encounter an internal exception during processing the data request from the remote device.
 (服务器在处理外部远程设备的数据请求的时候发生内部错误)
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket.EOF">
 <summary>
 字符串流串的结束标识符
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket.IsServerInternalException(System.String)">
 <summary>
 SERVER_INTERNAL_EXCEPTION，Server encounter an internal exception during processing
 the data request from the remote device.
 (判断是否服务器在处理客户端的请求的时候，发生了内部错误)
 </summary>
 <param name="replyData"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket.disposedValue">
 <summary>
 退出监听线程所需要的
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpSynchronizationServicesSocket.Dispose">
 <summary>
 Stop the server socket listening threads.(终止服务器Socket监听线程)
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.PerformanceLog.Ticks">
 <summary>
 服务器完成一个请求的所需要花费的时间的长短，使用这个参数可以估计一段时间内的服务器的处理压力，压力越大，则某一个请求可能会需要花费更加长的时间来处理
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.DataResponseHandler">
 <summary>
 消息处理的方法
 </summary>
 <param name="str">远程设备所发送过来的消息</param>
 <param name="RemoteAddress">远程设备的网络连接参数</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.ExceptionHandler">
 <summary>
 处理错误的工作逻辑的抽象接口
 </summary>
 <param name="ex">Socket的内部错误信息</param>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.StateObject">
 <summary>
 State object for reading client data asynchronously
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.StateObject.workSocket">
 <summary>
 Client  socket.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.StateObject.BufferSize">
 <summary>
 Size of receive buffer.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.StateObject.buffer">
 <summary>
 Receive buffer.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.StateObject.sb">
 <summary>
 Received data string.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.ConnectSocket(System.String,System.Int32)">
 <summary>
 假若不能成功的建立起连接的话，则会抛出错误
 </summary>
 <param name="server"></param>
 <param name="port"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.GetFirstAvailablePort(System.Int32)">
 <summary>
 Get the first available TCP port on this local machine.(获取第一个可用的端口号)
 </summary>
 <param name="BEGIN_PORT">Check the local port available from this port value.(从这个端口开始检测)</param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.PortIsUsed">
 <summary>
 获取操作系统已用的端口号
 </summary>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.PortIsAvailable(System.Int32)">
 <summary>
 检查指定端口是否已用
 </summary>
 <param name="port"></param>
 <returns></returns>
</member>
<member name="T:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket">
 <summary>
 Socket listening object which is running at the server side asynchronous able multiple threading.
 (运行于服务器端上面的Socket监听对象，单线程模型)
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket._InternalThreadSignalAllDone">
 <summary>
 Thread signal.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket._InternalRequestHandler">
 <summary>
 这个函数指针用于处理来自于客户端的请求
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket._LocalPort">
 <summary>
 Socket对象监听的端口号
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket.LocalPort">
 <summary>
 The server services listening on this local port.(当前的这个服务器对象实例所监听的本地端口号)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket.RequestHandler">
 <summary>
 This function pointer using for the data request handling of the data request from the client socket.
 (这个函数指针用于处理来自于客户端的请求)
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket.#ctor(Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.DataResponseHandler,System.Int32,Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.ExceptionHandler)">
 <summary>
 消息处理的方法接口： Public Delegate Function DataResponseHandler(str As String, RemotePort As Integer) As String
 </summary>
 <param name="DataArrivalEventHandler">Public Delegate Function DataResponseHandler(str As String, RemotePort As Integer) As String</param>
 <param name="LocalPort">监听的本地端口号，假若需要进行端口映射的话，则可以在<see cref="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket.Run(System.Int32)"></see>方法之中设置映射的端口号</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket.BeginListen(Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.DataResponseHandler,System.Int32,Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.ExceptionHandler)">
 <summary>
 函数返回Socket的注销方法
 </summary>
 <param name="DataArrivalEventHandler">Public Delegate Function DataResponseHandler(str As String, RemotePort As Integer) As String</param>
 <param name="LocalPort"></param>
 <param name="exHandler"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket.Run(System.Net.IPEndPoint)">
 <summary>
 This server waits for a connection and then uses  asychronous operations to
 accept the connection, get data from the connected client,
 echo that data back to the connected client.
 It then disconnects from the client and waits for another client.(请注意，当服务器的代码运行到这里之后，代码将被阻塞在这里)
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket.Run(System.Int32)">
 <summary>
 This server waits for a connection and then uses  asychronous operations to
 accept the connection, get data from the connected client,
 echo that data back to the connected client.
 It then disconnects from the client and waits for another client.(请注意，当服务器的代码运行到这里之后，代码将被阻塞在这里)
 </summary>
 <param name="PortMapping">是否需要对端口进行映射处理，假若值为小于100的数值则说明不需要</param>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket.SERVER_INTERNAL_EXCEPTION">
 <summary>
 Server encounter an internal exception during processing the data request from the remote device.
 (服务器在处理外部远程设备的数据请求的时候发生内部错误)
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket.EOF">
 <summary>
 字符串流串的结束标识符
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket.IsServerInternalException(System.String)">
 <summary>
 SERVER_INTERNAL_EXCEPTION，Server encounter an internal exception during processing
 the data request from the remote device.
 (判断是否服务器在处理客户端的请求的时候，发生了内部错误)
 </summary>
 <param name="replyData"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket.Send(System.Net.Sockets.Socket,System.String)">
 <summary>
 Server reply the processing result of the request from the client.
 </summary>
 <param name="handler"></param>
 <param name="data"></param>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket.disposedValue">
 <summary>
 退出监听线程所需要的
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket.Dispose">
 <summary>
 Stop the server socket listening threads.(终止服务器Socket监听线程)
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient">
 <summary>
 The server socket should returns some data string to this client or this client will stuck at the <see cref="M:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.SendMessage(System.String)"></see> function.
 (服务器端<see cref="T:Microsoft.VisualBasic.WrapperClassTools.Net.TcpAsynchronousServicesSocket"></see>必须要返回数据，否则本客户端会在<see cref="M:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.SendMessage(System.String)"></see>函数位置一直处于等待的状态)
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.port">
 <summary>
 The port number for the remote device.  
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.response">
 <summary>
 The response from the remote device.   
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.connectDone">
 <summary>
 ' ManualResetEvent instances signal completion.  
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.remoteEP">
 <summary>
 Remote End Point
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.LocalIP">
 <summary>
 Gets the IP address of this local machine.(获取本机对象的IP地址)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.#ctor(Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient,Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.ExceptionHandler)">
 <summary>
 
 </summary>
 <param name="Client">Copy the TCP client connection profile data from this object.(从本客户端对象之中复制出连接配置参数以进行初始化操作)</param>
 <param name="ExceptionHandler"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.#ctor(System.String,System.Int32,Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.ExceptionHandler)">
 <summary>
 
 </summary>
 <param name="RemotePort"></param>
 <param name="ExceptionHandler">Public Delegate Sub ExceptionHandler(ex As Exception)</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.LocalClient(System.Int32,Microsoft.VisualBasic.WrapperClassTools.Net.TCPExtensions.ExceptionHandler)">
 <summary>
 初始化一个在本机进行进程间通信的Socket对象
 </summary>
 <param name="LocalPort"></param>
 <param name="ExceptionHandler"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.OperationTimeOut(System.String)">
 <summary>
 判断服务器所返回来的数据是否为操作超时
 </summary>
 <param name="str"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.SendMessage(System.String,System.Int32,System.Action)">
 <summary>
 Returns the server reply.(假若操作超时的话，则会返回<see cref="F:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.OPERATION_TIMEOUT"></see>)
 </summary>
 <param name="Message"></param>
 <param name="OperationTimeOut">操作超时的时间长度，默认为30秒</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.SendEncryptedMessage(System.String)">
 <summary>
 附带有加密操作的消息发送函数，使用本函数发送的数据需要在服务器端处进行相同的方法的解密
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.SendMessage(System.String)">
 <summary>
 This function returns the server reply for this request <paramref name="Message"></paramref>.
 </summary>
 <param name="Message">The client request to the server.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.AsynchronousClient.InternalSend(System.Net.Sockets.Socket,System.String)">
 <summary>
 ????
 An exception of type 'System.Net.Sockets.SocketException' occurred in System.dll but was not handled in user code
 Additional information: A request to send or receive data was disallowed because the socket is not connected and 
 (when sending on a datagram socket using a sendto call) no address was supplied
 </summary>
 <param name="client"></param>
 <param name="data"></param>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.WrapperClassTools.Net.EMailClient">
 <summary>
 A client of gmail.com
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.EMailClient.SendMessagesTo(System.String,System.String,System.String)">
 <summary>
 
 </summary>
 <param name="emailTitle">标题</param>
 <param name="emailNote">内容</param>
 <param name="emailUser">收件人地址</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Net.EMailClient.GmailClient(System.String,System.String)">
 <summary>
 Gmail
 </summary>
 <param name="Account"></param>
 <param name="Password"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.WrapperClassTools.Net.EMailClient.MailConfigure.Password">
 <summary>
 存储至文件之前请先加密
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.WrapperClassTools.Compression">
 <summary>
 Creating Zip Files Easily in .NET 4.5
 Tim Corey, 11 May 2012
 http://www.codeproject.com/Articles/381661/Creating-Zip-Files-Easily-in-NET
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.WrapperClassTools.Compression.Overwrite">
 <summary>
 Used to specify what our overwrite policy
 is for files we are extracting.
 </summary>
</member>
<member name="T:Microsoft.VisualBasic.WrapperClassTools.Compression.ArchiveAction">
 <summary>
 Used to identify what we will do if we are
 trying to create a zip file and it already
 exists.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Compression.ImprovedExtractToDirectory(System.String,System.String,Microsoft.VisualBasic.WrapperClassTools.Compression.Overwrite)">
 <summary>
 Unzips the specified file to the given folder in a safe
 manner.  This plans for missing paths and existing files
 and handles them gracefully.
 </summary>
 <param name="sourceArchiveFileName">
 The name of the zip file to be extracted
 </param>
 <param name="destinationDirectoryName">
 The directory to extract the zip file to
 </param>
 <param name="overwriteMethod">
 Specifies how we are going to handle an existing file.
 The default is IfNewer.
 </param>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Compression.ImprovedExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,Microsoft.VisualBasic.WrapperClassTools.Compression.Overwrite)">
 <summary>
 Safely extracts a single file from a zip file
 </summary>
 <param name="file__1">
 The zip entry we are pulling the file from
 </param>
 <param name="destinationPath">
 The root of where the file is going
 </param>
 <param name="overwriteMethod">
 Specifies how we are going to handle an existing file.
 The default is Overwrite.IfNewer.
 </param>
</member>
<member name="M:Microsoft.VisualBasic.WrapperClassTools.Compression.AddToArchive(System.String,System.Collections.Generic.List{System.String},Microsoft.VisualBasic.WrapperClassTools.Compression.ArchiveAction,Microsoft.VisualBasic.WrapperClassTools.Compression.Overwrite,System.IO.Compression.CompressionLevel)">
 <summary>
 Allows you to add files to an archive, whether the archive
 already exists or not
 </summary>
 <param name="archiveFullName">
 The name of the archive to you want to add your files to
 </param>
 <param name="files">
 A set of file names that are to be added
 </param>
 <param name="action">
 Specifies how we are going to handle an existing archive
 </param>
 <param name="compression">
 Specifies what type of compression to use - defaults to Optimal
 </param>
</member>
<member name="T:Microsoft.VisualBasic.Parallel.Task`2">
 <summary>
 更加底层的线程模式，和LINQ相比不会受到CPU核心数目的限制
 </summary>
 <typeparam name="T"></typeparam>
 <typeparam name="TOut"></typeparam>
</member>
<member name="T:Microsoft.VisualBasic.Parallel.LQuerySchedule">
 <summary>
 用于高效率执行批量查询操作和用于检测操作超时的工具对象，请注意，为了提高查询的工作效率，请尽量避免在查询操作之中生成新的临时对象
 并行版本的LINQ查询和原始的线程操作相比具有一些性能上面的局限性
 </summary>
 <remarks>在使用Parallel LINQ的时候，请务必要注意不能够使用Let语句操作共享变量，因为排除死锁的开销比较大</remarks>
</member>
<member name="F:Microsoft.VisualBasic.Parallel.LQuerySchedule._TimeOut">
 <summary>
 查询操作超时的时间阈值，单位为秒
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.Parallel.LQuerySchedule._n">
 <summary>
 查询操作的线程数目
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Parallel.LQuerySchedule.#ctor(System.Int32,System.Int32)">
 <summary>
 
 </summary>
 <param name="timeout">查询操作超时的时间阈值，单位为秒</param>
 <param name="n">这个参数通常是指CPU的核心数目，或者查询任务执行的最大线程数目</param>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Parallel.LQuerySchedule.CPU_NUMBER">
 <summary>
 Get the number of processors on the current machine.(获取当前的系统主机的CPU核心数)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Parallel.LQuerySchedule.Recommended_NUM_THREADS">
 <summary>
 The possible recommended threads of the linq based on you machine processors number, i'm not sure...
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Parallel.LQuerySchedule.InternalInvokeQuery``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},``1)">
 <summary>
 当查询操作超时的时候，单条查询线程会返回<paramref name="Default">默认值</paramref>
 </summary>
 <typeparam name="Out">返回的值类型</typeparam>
 <param name="Collection"></param>
 <param name="invoke"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Parallel.LQuerySchedule.InternalStartLQuery``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
 <summary>
 采取非并行化的方式启动计算线程
 </summary>
 <typeparam name="TOut"></typeparam>
 <param name="Collection"></param>
 <param name="invoke"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Parallel.LQuerySchedule.InternalStartLQuery``2(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.Parallel.LQuerySchedule.LQueryCacheHandle{``0}},System.Func{``0,``1})">
 <summary>
 采取非并行化的方式启动计算线程
 </summary>
 <typeparam name="TOut"></typeparam>
 <param name="Collection"></param>
 <param name="invoke"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Parallel.LQuerySchedule.InvokeQuery_UltraLargeSize``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
 <summary>
 当需要进行超大规模的查询的时候，请使用本方法，本方法的的思想是将查询操作分解为多于CPU核心数目的线程池进行批量计算
 </summary>
 <typeparam name="TOut"></typeparam>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Parallel.LQuerySchedule.InternalInvokeQuery_p``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``1})">
 <summary>
 
 </summary>
 <typeparam name="Out"></typeparam>
 <param name="Collection"></param>
 <param name="invoke"></param>
 <param name="get_Default">当查询超时的时候，使用本方法获得一个默认值</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Parallel.LQuerySchedule.InvokeQuery``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
 <summary>
 非并行版本
 </summary>
 <typeparam name="T"></typeparam>
 <typeparam name="Out"></typeparam>
 <param name="Collection"></param>
 <param name="invoke"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Parallel.LQuerySchedule.LQuery``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
 <summary>
 .NET 4.6之中的并行LINQ失效了？？？？？？
 </summary>
 <typeparam name="T"></typeparam>
 <typeparam name="TOut"></typeparam>
 <param name="Input"></param>
 <param name="Handle"></param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Parallel.LQuerySchedule.PBS_TEST">
 <summary>
 DEBUG
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.Scripting.EntryPointMetaData.ParameterAlias">
 <summary>
 You Cann assign the parameter value using the parameter's alias name in the scripting using this attribute.
 (你可以使用本属性将函数的参数名进行重命名，这样子你就可以使用本属性得到一个书写更加漂亮的编程脚本文件了)
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Scripting.EntryPointMetaData.ParameterAlias.MyAssociatedParameterInfo">
 <summary>
 请使用这个方法<see cref="M:Microsoft.VisualBasic.Scripting.EntryPointMetaData.ParameterAlias.GetParameterNameAliasValue(System.Reflection.ParameterInfo)"></see>来获取参数信息
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Scripting.EntryPointMetaData.ParameterAlias.Alias">
 <summary>
 The alias name of this function parameter in the scripting.(脚本函数的参数的别名)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Scripting.EntryPointMetaData.ParameterAlias.Description">
 <summary>
 The description information in the scripting help system.(在帮助信息里面进行显示的本参数的简要的描述信息)  
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Scripting.EntryPointMetaData.ParameterAlias.#ctor(System.String,System.String)">
 <summary>
 You can using this attribute to customize your API interface.
 </summary>
 <param name="Alias">The alias name of this function parameter in the scripting.(当前脚本函数的这个参数的别名)</param>
 <param name="MyDescription">The description information in the scripting help system.(这个信息会显示在脚本环境的帮助系统之中)</param>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.Scripting.EntryPointMetaData.OverloadsSignatureHandle">
 <summary>
 用于解决函数重载的函数数字签名的属性
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Scripting.EntryPointMetaData.OverloadsSignatureHandle.#ctor(System.String,System.Type)">
 <summary>
 
 </summary>
 <param name="TypeIdBrief">Brief name for the target signature type <paramref name="FullName"></paramref></param>
 <param name="FullName">Target signature type for function overloads.</param>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.Similarity">
 <summary>
 Summary description for StringMatcher.
 </summary>
 
</member>
<member name="T:Microsoft.VisualBasic.Tokeniser">
 <summary>
 Summary description for Tokeniser.
 Partition string off into subwords
 </summary>
</member>
<member name="T:Microsoft.VisualBasic.Leven">
 <summary>
 Summary description for Leven.
 </summary>
</member>
<member name="T:Microsoft.VisualBasic.ISimilarity">
 <summary>
 Summary description for IEditDistance.
 </summary>
</member>
<member name="T:Microsoft.VisualBasic.BipartiteMatcher">
 <summary>
 Summary description for StringMatcher.
 </summary>
 
</member>
<member name="M:Microsoft.VisualBasic.TimeInterval.ToString">
 <summary>
 (dd hh:mm:ss) 输出可以被MySQL数据库所识别的字符串格式
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.GrayBitmap">
 <summary>
 Download by http://www.codefans.net
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.GrayBitmap.DrawGrayBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 Chang the bitmap to gray bitmap in hdc.
 </summary>
 <param name="hdc"></param>
 <param name="nx"></param>
 <param name="ny"></param>
 <param name="nWidth"></param>
 <param name="nHeight"></param>
 <param name="nMaskColor"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.SingleInstanceFormEntry`1.#ctor(System.Boolean)">
 <summary>
 不做任何位置的设置操作
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.SingleInstanceFormEntry`1.InternalGetDefaultPosition(System.Windows.Forms.UserControl,System.Windows.Forms.Form)">
 <summary>
 默认位置是控件的中间
 </summary>
 <param name="Control"></param>
 <param name="Form"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.SecurityString.SHA256">
 <summary>
 Derives a SHA256 key from a password using an extension of the PBKDF1 algorithm.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.SecurityString.SHA256.DecryptString(System.String)">
 <summary>
 字符串的解密方法
 </summary>
 <param name="cipherText"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.SecurityString.SHA256.CertificateSigned">
 <summary>
 The previous key of the sha256 encryption will be expired after the rebuild of this module,
 so that this method is not working on the statics data storage job.
 (在本模块进行重新编译之后，原有的密匙将会失效，故这个属性不适合于静态存储加密使用)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.SecurityString.SHA256.GetDynamicsCertification``1">
 <summary>
 双重动态数据签名
 </summary>
 <typeparam name="T"></typeparam>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.SecurityString.SHA256.GetDynamicsCertification(System.Type)">
 <summary>
 双重动态数据签名
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.SecurityString.MD5Hash.InternalMd5Hash">
 <summary>
 并行化的需求
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.SecurityString.MD5Hash.VerifyMd5Hash(System.String,System.String)">
 <summary>
 Verify a hash against a string. 
 </summary>
 <param name="input"></param>
 <param name="comparedHash"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.SecurityString.MD5Hash.VerifyFile(System.String,System.String)">
 <summary>
 校验两个文件的哈希值是否一致
 </summary>
 <param name="query"></param>
 <param name="subject"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.SecurityString.MD5Hash.GetFileHashString(System.String)">
 <summary>
 Get the md5 hash calculation value for a specific file.(获取文件对象的哈希值)
 </summary>
 <param name="PathUri">The file path of the target file to be calculated.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.SecurityString.TripleDES.#ctor(System.Byte[],System.Byte[])">
 <summary>
 
 </summary>
 <param name="key">24byte</param>
 <param name="iv">8byte</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.OperationTimeOut.OperationTimeOut``2(System.Func{``0,``1},``0,``1@,System.Double)">
 <summary>
 The returns value of TRUE represent of the target operation has been time out.(返回真，表示操作超时)
 </summary>
 <typeparam name="T"></typeparam>
 <typeparam name="TOut"></typeparam>
 <param name="Handle"></param>
 <param name="Out"></param>
 <param name="TimeOut">The time unit of this parameter is second.(单位为秒)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.OperationTimeOut.OperationTimeOut``1(System.Func{``0},``0@,System.Double)">
 <summary>
 
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Handle"></param>
 <param name="Out"></param>
 <param name="TimeOut">The time unit of this parameter is second.(单位为秒)</param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.OperationTimeOut.OperationTimeOut(System.Action,System.Double)">
 <summary>
 
 </summary>
 <param name="Handle"></param>
 <param name="TimeOut">The time unit of this parameter is second.(单位为秒)</param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.OperationTimeOut.ProcessUsageDetails">
 <summary>
 类似于任务管理器的函数：Memory, CPU, ProcessName, PID, CommandLine
 </summary>
 <returns>Memory, CPU</returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.OperationTimeOut.ProcessUsage">
 <summary>
 获取CPU的使用率
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.PBSThreading.Invoke(System.Action[],System.Int32)">
 <summary>
 
 </summary>
 <param name="Handles"></param>
 <param name="NumOfThreads">同时执行的句柄的数目</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.DataStructures.TreeNode`1">
 <summary>
 Define tree nodes
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree`1">
 <summary>
 The Binary tree itself.
 
 A very basic Binary Search Tree. Not generalized, stores
 name/value pairs in the tree nodes. name is the node key.
 The advantage of a binary tree is its fast insert and lookup
 characteristics. This version does not deal with tree balancing.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree`1._Count">
 <summary>
 Points to the root of the tree
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree`1.clear">
 <summary>
 Clear the binary tree.
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree`1.Length">
 <summary>
 Returns the number of nodes in the tree
 </summary>
 <returns>Number of nodes in the tree</returns>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree`1.FindSymbol(System.String)">
 <summary>
 Find name in tree. Return a reference to the node
 if symbol found else return null to indicate failure.
 </summary>
 <param name="name">Name of node to locate</param>
 <returns>Returns null if it fails to find the node, else returns reference to node</returns>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree`1.insert(System.String,`0)">
 <summary>
 Add a symbol to the tree if it's a new one. Returns reference to the new
 node if a new node inserted, else returns null to indicate node already present.
 </summary>
 <param name="name">Name of node to add to tree</param>
 <param name="d">Value of node</param>
 <returns> Returns reference to the new node is the node was inserted.
 If a duplicate node (same name was located then returns null</returns>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree`1.findSuccessor(Microsoft.VisualBasic.ComponentModel.DataStructures.TreeNode{`0},Microsoft.VisualBasic.ComponentModel.DataStructures.TreeNode{`0}@)">
 <summary>
 Find the next ordinal node starting at node startNode.
 Due to the structure of a binary search tree, the
 successor node is simply the left most node on the right branch.
 </summary>
 <param name="startNode">Name key to use for searching</param>
 <param name="parent">Returns the parent node if search successful</param>
 <returns>Returns a reference to the node if successful, else null</returns>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree`1.delete(System.String)">
 <summary>
 Delete a given node. This is the more complex method in the binary search
 class. The method considers three senarios, 1) the deleted node has no
 children; 2) the deleted node as one child; 3) the deleted node has two
 children. Case one and two are relatively simple to handle, the only
 unusual considerations are when the node is the root node. Case 3) is
 much more complicated. It requires the location of the successor node.
 The node to be deleted is then replaced by the sucessor node and the
 successor node itself deleted. Throws an exception if the method fails
 to locate the node for deletion.
 </summary>
 <param name="key">Name key of node to delete</param>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataStructures.BinaryTree`1.ToString">
 <summary>
 Return the tree depicted as a simple string, useful for debugging, eg
 50(40(30(20, 35), 45(44, 46)), 60)
 </summary>
 <returns>Returns the tree</returns>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.HashDictionary`1">
 <summary>
 The key of the dictionary is string value and the keys is not sensitive to the character case.
 (字典的键名为字符串，大小写不敏感，行为和哈希表类型)
 </summary>
 <typeparam name="T"></typeparam>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Generic.HashDictionary`1.ContainsKey(System.String)">
 <summary>
 
 </summary>
 <param name="key">大小写不敏感</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.HashDictionary`1.Item(System.String)">
 <summary>
 添加<see cref="M:Microsoft.VisualBasic.ComponentModel.Collection.Generic.HashDictionary`1.Add(System.Collections.Generic.KeyValuePair{System.String,`0})"></see>和替换操作主要在这里进行
 </summary>
 <param name="key">大小写不敏感</param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.Collection.Generic.PairItem`2.Equals(Microsoft.VisualBasic.ComponentModel.Collection.Generic.PairItem{`0,`1})">
 <summary>
 Call by the method <see cref="M:Microsoft.VisualBasic.IEnumerations.GetItem``1(System.Collections.Generic.IEnumerable{``0},System.String)"></see>
 </summary>
 <param name="pairItem"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IAccessionIdEnumerable">
 <summary>
 This kind of object type can be convert into a dictionary object by its <see cref="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IAccessionIdEnumerable.UniqueId"></see> property.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IAccessionIdEnumerable.UniqueId">
 <summary>
 This property can be using for the unique identified this target object in a collection.
 (可以使用本属性来在集合之中唯一标识本目标对象)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IReadOnlyAccessionId">
 <summary>
 和<see cref="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IAccessionIdEnumerable"></see>所不同的是，本类型的<see cref="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IReadOnlyAccessionId.UniqueId"></see>是只能读取而不能够赋值的
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IReadOnlyAccessionId.UniqueId">
 <summary>
 Read only unique identifier.(只读的唯一标识符)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IKeyValuePairObject`2">
 <summary>
 Defines a key/value pair that can be set or retrieved.
 </summary>
 <typeparam name="TKey"></typeparam>
 <typeparam name="TValue"></typeparam>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IKeyValuePairObject`2.Key">
 <summary>
 Gets the key in the key/value pair.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IKeyValuePairObject`2.Value">
 <summary>
 Gets the value in the key/value pair.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IReadOnlyDataSource`1">
 <summary>
 Defines a key/value pair that only can be retrieved.
 </summary>
 <typeparam name="TValue"></typeparam>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.KeyValuePairObject`2">
 <summary>
 Defines a key/value pair that can be set or retrieved.
 </summary>
 <typeparam name="TKey"></typeparam>
 <typeparam name="TValue"></typeparam>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.KeyValuePairObject`2.Key">
 <summary>
 Gets the key in the key/value pair.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.KeyValuePairObject`2.Value">
 <summary>
 Gets the value in the key/value pair.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework">
 <summary>
 在目标对象中必须要具有一个属性有自定义属性<see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFrameColumnAttribute"></see>
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.BasicTypesLoading">
 <summary>
 将字符串数据类型转换为其他的数据类型
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.CasterString">
 <summary>
 Object为字符串类型，这个字典可以讲字符串转为目标类型
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.CastString(System.Object,System.Type)">
 <summary>
 
 </summary>
 <param name="obj">必须要为String类型</param>
 <param name="ConvertType"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.CreateObject``1(System.Collections.Generic.IEnumerable{``0})">
 <summary>
 Convert target data object collection into a datatable for the data source of the <see cref="T:System.Windows.Forms.DataGridView"></see>>.
 (将目标对象集合转换为一个数据表对象，用作DataGridView控件的数据源)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="DataCollection"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFramework.GetValue``1(System.Data.DataTable)">
 <summary>
 Retrive data from a specific datatable object.(从目标数据表中获取数据)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="DataTable"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFrameColumnAttribute">
 <summary>
 Represents a column of certain data frames. The mapping between to schema is also can be represent by this attribute. 
 (也可以使用这个对象来完成在两个数据源之间的属性的映射，由于对于一些列名称的属性值缺失的映射而言，
 其是使用属性名来作为列映射名称的，故而在修改这些没有预设的列名称的映射属性的属性名的时候，请注意
 要小心维护这种映射关系)
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFrameColumnAttribute.Index">
 <summary>
 Gets the index.
 </summary>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFrameColumnAttribute.Name">
 <summary>
 Gets the name.
 </summary>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFrameColumnAttribute.#ctor(System.String)">
 <summary>
 Initializes a new instance by name.
 </summary>
 <param name="FieldName">The name.</param>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFrameColumnAttribute.#ctor(System.Int32)">
 <summary>
 Initializes a new instance by index.
 </summary>
 <param name="index">The index.</param>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFrameColumnAttribute.#ctor">
 <summary>
 会默认使用目标对象的反射的Name属性作为映射的名称
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFrameColumnAttribute.#ctor(System.String,System.Int32)">
 <summary>
 
 </summary>
 <param name="Name">列名称，假若本参数为空的话，则使用属性名称</param>
 <param name="index">从1开始的下标，表示为第几列</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFrameColumnAttribute.LoadMapping``1">
 <summary>
 没有名称属性的映射使用属性名来表述
 </summary>
 <typeparam name="T"></typeparam>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFrameColumnAttribute.LoadMapping(System.Type)">
 <summary>
 Load the mapping property, if the custom attribute <see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFrameColumnAttribute"></see> 
 have no name value, then the property name will be used as the mapping name.
 </summary>
 <param name="TypeInfo">The type should be a class type or its properties should have the 
 mapping option which was created by the custom attribute <see cref="T:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFrameColumnAttribute"></see>
 </param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.DataSourceModel.DataFrameIO`1.InitializeSchema``1">
 <summary>
 
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.Settings.SimpleConfig.TryParse``2(System.Boolean,System.Boolean)">
 <summary>

 </summary>
 <typeparam name="T"></typeparam>
 <typeparam name="TConfig"></typeparam>
 <param name="canRead">向文件之中写数据的时候，需要设置为真</param>
 <param name="canWrite">从文件之中读取数据的时候，需要设置为真</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.Settings.SimpleConfig.GenerateConfigurations``1(``0)">
 <summary>
 从类型实体生成配置文件数据
 </summary>
 <typeparam name="T"></typeparam>
 <param name="target"></param>
 <returns></returns>
 <remarks>类型实体之中的简单属性，只要具备可读属性即可被解析出来</remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.Settings.IProfile.FilePath">
 <summary>
 本属性不能够被设置为只读属性是因为 Settings.Settings(Of IProfile).LoadFile 函数的需要
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.Settings.Settings`1.AllItems">
 <summary>
 List all of the available settings nodes in this profile data session.
 (枚举出当前配置会话之中的所有可用的配置节点)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Settings`1.LoadFile(System.String)">
 <summary>

 </summary>
 <param name="XmlFile">目标配置文件的Xml文件的文件名</param>
 <returns>可以调用的配置项的数目，解析失败则返回0</returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.Settings.Settings`1.WriteLine(System.String)">
 <summary>
假若函数参数<paramref name="name"/>为空，则函数输出所有的变量的值
 </summary>
 <param name="name">假若本参数为空，则函数输出所有的变量的值</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.Settings.ProfileItem">
 <summary>
 The simple configuration mapping node in the current profile data, the data type of this node 
 object should be just the simplest data type such as String, Integer, Long, Double, Boolean.
 (当前的配置节点为一个简单节点，即目标属性的属性值类型的字符串，数字或者逻辑值等最基本的数据类型)
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.Settings.ProfileItem.#ctor(System.String,System.String)">
 <summary>
 Initialize a node in the settings xml document.
 </summary>
 <param name="NodeName">The name of the node in the document xml file</param>
 <param name="NodeDescription">The brief introduction information about this profile node.</param>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.Settings.ProfileNodeItem">
 <summary>
 当前的配置节点为一个复杂数据类型的配置节点，即目标属性的属性类型为一个Class对象
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.Href">
 <summary>
 Resource link data.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.Href.Value">
 <summary>
 The relative path of the target resource object in the file system.(资源对象在文件系统之中的相对路径)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.Href.GetFullPath(System.String)">
 <summary>
 获取<see cref="P:Microsoft.VisualBasic.ComponentModel.Href.Value"></see>所指向的资源文件的完整路径
 </summary>
 <param name="Dir"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.DictHashValue`1">
 <summary>
 假若需要通过字典对象实现一些统计操作，则这个对象类型可能十分有用
 </summary>
 <typeparam name="T"></typeparam>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.DictHashValue`1.value">
 <summary>
 由于字典对象的元素为值对象，所以无法进行元素值的修改，所以可以使用这个对象进行修改
 </summary>
 <returns></returns>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.TripleKeyValuesPair">
 <summary>
 The key has 2 string value collection.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.KeyValuePair">
 <summary>
 An object for the text file format xml data storage.(用于存储与XML文件之中的字符串键值对对象)
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.KeyValuePair.IKeyValuePair">
 <summary>
 Defines a key/value pair that can be set or retrieved.(特化的<see cref="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IKeyValuePairObject`2"></see>字符串属性类型)
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.KeyValuePair.Key">
 <summary>
 Gets the key in the key/value pair.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>在这里可能用不了<see cref="T:System.Xml.Serialization.XmlAttributeAttribute"></see>自定义属性，因为其基本类型之中的Key和Value可以是任意的类型的，Attribute格式无法序列化复杂的数据类型</remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.KeyValuePair.Equals(Microsoft.VisualBasic.ComponentModel.KeyValuePair,System.Boolean)">
 <summary>
 
 </summary>
 <param name="obj"></param>
 <param name="strict">If strict is TRUE then the function of the string compares will case sensitive.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.Key_strArrayValuePair">
 <summary>
 {Key, strArray()} The value of this data type object is a string collection.(本类型对象的值属性类型为一个字符串集合)
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.ITextFile">
 <summary>
 Object model of the text file doucment.(文本文件的对象模型，这个文本文件对象在Disposed的时候会自动保存其中的数据)
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.ITextFile.I_FileSaveHandle">
 <summary>
 This is a file object which have a handle to save its data to the filesystem.(这是一个带有文件数据保存方法的文件模型)
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.ITextFile.I_FileSaveHandle.Save(System.String,System.Text.Encoding)">
 <summary>
 Handle for saving the file data.(保存文件的方法)
 </summary>
 <param name="Path">The file path that will save data to.(进行文件数据保存的文件路径)</param>
 <param name="encoding">The text encoding value for the text document.(文本文档的编码格式)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.ITextFile.FilePath">
 <summary>
 The storage filepath of this text file.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.ITextFile.getPath(System.String)">
 <summary>
 Automatically determine the path paramater: If the target path is empty, then return
 the file object path <see cref="P:Microsoft.VisualBasic.ComponentModel.ITextFile.FilePath"></see> property, if not then return the
 <paramref name="path"></paramref> directly.
 (当<paramref name="path"></paramref>的值不为空的时候，本对象之中的路径参数将会被替换，反之返回本对象的路径参数)
 </summary>
 <param name="path"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.ITextFile.Read(System.String,System.Text.Encoding)">
 <summary>

 </summary>
 <param name="FilePath"></param>
 <param name="Encoding">Default value is UTF8</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.ITextFile.ReadAllLines(System.String,System.Text.Encoding)">
 <summary>

 </summary>
 <param name="FilePath"></param>
 <param name="Encoding">Default value is UTF8</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.Comb`1">
 <summary>
 对象类型的组合输出工具，即目标类型的集合之中的元素两两组合配对
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.Comb`1.EOL">
 <summary>
 对象列表是否已经完全组合输出
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.Comb`1.NewLine">
 <summary>
 是否已经开始读取新的一行数据
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.Comb`1.CreateCompleteObjectPairs(System.Collections.Generic.IEnumerable{`0})">
 <summary>
 Creates the completely combination of the elements in the target input collection source.
 (创建完完全全的两两配对)
 </summary>
 <param name="Collection"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.Comb">
 <summary>
 任意多个集合之间的对象之间相互组成组合输出
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.IHandler">
 <summary>
 This object gets a object handle value to indicated that the position this object exists 
 in the list collection structure. 
 (这个对象具有一个用于指明该对象在列表对象中的位置的对象句柄值)
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.IHandler.Handle">
 <summary>
 The ID that this object in a list instance.
 (本对象在一个列表对象中的位置索引号) 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ComponentModel.HandledList`1">
 <summary>
 
 </summary>
 <typeparam name="T">
 Class object that can be dispose by the system automatically and the class object that should 
 have a handle property to specific its position in this list class. 
 (能够被系统所自动销毁的对象类型，并且该类型的对象必须含有一个Handle属性来指明其在本列表中的位置)
 </typeparam>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ComponentModel.HandledList`1._ListData">
 <summary>
 Object instances data physical storage position, element may be null after 
 remove a specify object handle. 
 (列表中的元素对象实例的实际存储位置，当对象元素从列表之中被移除了之后，其将会被销毁)
 </summary>
 <remarks>
 即与只读属性'ListData'相比，这个字段的列表中可能含有空引用的元素对象.
 </remarks>
</member>
<member name="F:Microsoft.VisualBasic.ComponentModel.HandledList`1._EmptyListStack">
 <summary>
 Stack list that store the empty pointer
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ComponentModel.HandledList`1._HandleList">
 <summary>
 Exists handle that store in this list
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.HandledList`1.ListData">
 <summary>
 Get the logical list of the data store in this list object instance.
 (获取逻辑形式的列表数据)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.HandledList`1.Count">
 <summary>
 Get the logical list length 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.ComponentModel.HandledList`1.Item(System.Int64)">
 <summary>
 Get or set a object instance data that has specify handle value
 </summary>
 <param name="Handle">Target object handle value</param>
 <value>It is not recommend that you use this property to set the data element as the list object's capacity may not cover your handle</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.HandledList`1.#ctor(System.Int32)">
 <summary>
 Construct a new list object
 </summary>
 <param name="Capacity">The initialize size of this list object, Optional parameter, default value is 2048</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.HandledList`1.Append(`0@)">
 <summary>
 Add a disposable object instance element into this list object and return its object handle value in this list object    
 </summary>
 <param name="e">Object instance that will be store in this list object</param>
 <returns>Object handle in this list object instance</returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.HandledList`1.AppendRange(System.Collections.Generic.IEnumerable{`0}@)">
 <summary>
 Append a list of object instance
 </summary>
 <param name="list"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.HandledList`1.RemoveAt(System.Int64)">
 <summary>
 Remove a object instance element in this list object that have a specify handler
 </summary>
 <param name="Handle">Object handle value that specify the target object</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.HandledList`1.Exists(System.Int64)">
 <summary>
 Know that the specify handle pointe object is null or not? 
 </summary>
 <param name="Handle">Object handle</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.HandledList`1.Exists(`0)">
 <summary>
 Know that a specify object instance exists in this list object or not? 
 (判断某一个指定的对象实例是否存在于列表对象之中)
 </summary>
 <param name="e">Target object instance(目标要进行查找的对象实例)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.HandledList`1.Remove(`0)">
 <summary>
 Remove a specify object in this list object using its hashcode and return its handle value.
 (使用对象的哈希值来查找目标对象并对其进行移除，之后返回其句柄值) 
 </summary>
 <param name="e"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ComponentModel.HandledList`1.Flush">
 <summary>
 Clear all of the data in this list object instance.
 (清除本列表对象中的所有数据)
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.GDIPlusExtensions.GDIPlusDeviceHandle">
 <summary>
 GDI+ device handle
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.GDIPlusExtensions.GDIPlusDeviceHandle.Gr_Device">
 <summary>
 GDI+ device handle
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.GDIPlusExtensions.GDIPlusDeviceHandle.InternalBitmapResources">
 <summary>
 GDI+ device handle memory
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.GDIPlusExtensions.GDIPlusDeviceHandle.ImageResource">
 <summary>
 GDI+ device handle memory
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.GDIPlusExtensions.ImageAddFrame(Microsoft.VisualBasic.GDIPlusExtensions.GDIPlusDeviceHandle,System.Drawing.Pen,System.Int32)">
 <summary>
 为图像添加边框
 </summary>
 <param name="Handle"></param>
 <param name="pen">默认的绘图笔为黑色的1个像素的边框</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.GDIPlusExtensions.CreateGDIDevice(System.Drawing.SizeF,System.Drawing.Color)">
 <summary>
 创建一个GDI+的绘图设备
 </summary>
 <param name="r"></param>
 <param name="filled">默认的背景填充颜色为白色</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.GDIPlusExtensions.CreateGDIDevice(System.Drawing.Size,System.Drawing.Color)">
 <summary>
 创建一个GDI+的绘图设备
 </summary>
 <param name="r"></param>
 <param name="filled">默认的背景填充颜色为白色</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.GDIPlusExtensions.ImageCrop(System.Drawing.Image,System.Drawing.Point,System.Drawing.Size)">
 <summary>
 图片剪裁小方块区域
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.GDIPlusExtensions.TrimRoundHead(System.Drawing.Image,System.Int32)">
 <summary>
 图片剪裁为圆形的头像
 </summary>
 <param name="Head">要求为正方形或者近似正方形</param>
 <param name="OutSize"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.GDIPlusExtensions.IsNullOrEmpty(System.Drawing.Color)">
 <summary>
 Determine that the target color value is a empty variable.(判断目标颜色值是否为空值)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.GDIPlusExtensions.Vignette(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)">
 <summary>
 羽化
 </summary>
 <param name="Image"></param>
 <param name="y1"></param>
 <param name="y2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.StatisticsMathExtensions.CPOLLicense">
 <summary>
 http://www.codeproject.com/Articles/42492/Using-LINQ-to-Calculate-Basic-Statistics
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Serialization.DynamicsConfiguration.LoadDocument``1(System.String)">
 <summary>
 加载完数据之后返回其自身
 </summary>
 <typeparam name="T"></typeparam>
 <param name="path"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Serialization.ShadowsCopy.ShadowsCopy``1(``0)">
 <summary>
 将目标对象之中的属性按值复制
 </summary>
 <typeparam name="T"></typeparam>
 <param name="obj"></param>
 <returns></returns>
 <remarks>对外函数接口，为了防止无限递归的出现</remarks>
</member>
<member name="M:Microsoft.VisualBasic.Serialization.ShadowsCopy.ShadowsCopy(System.Object)">
 <summary>
 将目标对象之中的属性按值复制
 </summary>
 <param name="obj"></param>
 <returns></returns>
 <remarks>对外函数接口，为了防止无限递归的出现</remarks>
</member>
<member name="M:Microsoft.VisualBasic.Serialization.ShadowsCopy.InternalShadowsCopy(System.Type,System.Object)">
 <summary>
 递归使用的，基本数据类型直接复制，引用类型则首先创建一个新的对象，在对该对象进行递归复制，假若目标对象没有可用的无参数的构造函数，则直接赋值
 </summary>
 <param name="obj"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConfigurationMappings">
 <summary>
 最基本的思想是将属性值按照同名属性名称在A和B两个对象类型之间进行映射，即A与B两个对象之间必须要具备相同的属性名称，才可以产生映射，请注意在本对象之中仅能够映射最基本的值类型的数据类型
 对于一些自定义的映射操作，请在目标数据模型之中定义自定义的映射函数，要求为函数只有一个参数，参数类型和返回值类型分别为映射的两个节点的数据类型，程序会使用反射自动查找
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConfigurationMappings.LoadMapping``2(``1)">
 <summary>
 从源江基本的值类型映射到数据模型，以将配置数据读取出来并进行加载
 </summary>
 <typeparam name="T_Entity">数据模型</typeparam>
 <typeparam name="T_Mapping">源</typeparam>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConfigurationMappings.WriteMapping``2(``0)">
 <summary>
 从数据模型将值类型数据映射回源，以将配置数据写入文件
 </summary>
 <typeparam name="T_Entity">数据模型</typeparam>
 <typeparam name="T_Mapping">源</typeparam>
 <param name="Model"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConfigurationMappings.____STRING_SOURCE_TYPE_CASTING_HANDLER">
 <summary>
 数据类型转换方法的句柄对象
 </summary>
 <param name="data">源之中的数据，由于源是一个TEXT格式的数据文件，故而这里的数据类型为字符串，通过本句柄对象可以将字符串数据映射为其他的复杂数据类型</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConfigurationMappings.MappingsIgnored">
 <summary>
 这个属性或者方法不会被用于映射
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ConfigurationMappings.UseCustomMapping">
 <summary>
 不会使用系统自带的映射方法进行映射
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConfigurationMappings.NodeMapping.Source">
 <summary>
 映射的文本文件源
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConfigurationMappings.NodeMapping.Mapping">
 <summary>
 映射操作的目标数据模型
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConfigurationMappings.NodeMapping.SourceToMappingCasting">
 <summary>
 从源映射到数据模型的类型转换
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.ConfigurationMappings.NodeMapping.MappingToSourceCasting">
 <summary>
 从数据模型映射到源的类型转换
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ConfigurationMappings.InternalGetNodeMapping``2(System.Object)">
 <summary>
 获取从源映射至数据模型的映射过程
 </summary>
 <typeparam name="T_Entity">数据模型</typeparam>
 <typeparam name="T_Mapping">源</typeparam>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.TextGrepScriptEngine">
 <summary>
 A script object for grep the gene id in the blast output query and subject title.(用于解析基因名称的脚本类，这个对象是在项目的初始阶段，为了方便命令行操作而设置的)
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.TextGrepScriptEngine.TextGrepMethodToken">
 <summary>
 
 </summary>
 <param name="source">文本源</param>
 <param name="paras">脚本命令的参数</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.TextGrepScriptEngine._Operations">
 <summary>
 Source,Script,ReturnValue
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.TextGrepScriptEngine.Compile(System.String)">
 <summary>
 对用户所输入的脚本进行编译，对于内部的空格，请使用单引号'进行分割
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.TextGrepScriptEngine.Grep(System.String)">
 <summary>
 修整目标字符串，按照脚本之中的方法取出所需要的字符串信息
 </summary>
 <param name="source"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.TextGrepScriptEngine.Tokens(System.String,System.String[])">
 <summary>
 
 </summary>
 <param name="Source"></param>
 <param name="Script"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.TextGrepScriptEngine.MidString(System.String,System.String[])">
 <summary>
 
 </summary>
 <param name="source"></param>
 <param name="ScriptTokens">向量之中的第一个元素为命令的名字，第二个元素为Mid函数的Start参数，第三个元素为Mid函数的Length参数，可以被忽略掉</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ChangeLog">
 <summary>
 Tools for generate the program change log document.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ChangeLog.#ctor(System.String,System.String)">
 <summary>
 
 </summary>
 <param name="Path">ChangeLog的文件路径</param>
 <param name="ApplyOn">目标程序的主程序的文件路径</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ChangeLog.AppendChangeInformation(System.Collections.Generic.IEnumerable{System.String},System.Version,System.String)">
 <summary>
 
 </summary>
 <param name="Changes"></param>
 <param name="version">假若为空的话，会自动的根据上一次版本的号码叠加1</param>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.FileOperations">
 <summary>
 Wrapper for the file operations.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.FileOperations.Peeks(System.String,System.Int32)">
 <summary>
 当一个文件非常大以致无法使用任何现有的文本编辑器查看的时候，可以使用本方法查看其中的一部分数据 
 </summary>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.FileOperations.Tails(System.String,System.Int32)">
 <summary>
 尝试查看大文件的尾部的数据
 </summary>
 <param name="path"></param>
 <param name="length"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.ToolkitAPI.RegisterCOMDll(System.String)">
 <summary>
 Register a .NET dll file as a COM component.(将某一个.NET语言所编写的DLL文件注册为COM组件)
 </summary>
 <param name="COM_Dll"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.TextFileEncodingDetector">
 <summary>
 Encoding fileEncoding = TextFileEncodingDetector.DetectTextFileEncoding("you file path",Encoding.Default);
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.TextFileEncodingDetector.DetectTextFileEncoding(System.String,System.Text.Encoding)">
 <summary>
 completely arbitrary - inappropriate for high numbers of files / high speed requirements
 </summary>
 <param name="InputFilename"></param>
 <param name="DefaultEncoding"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.Win32File">
 <summary>
 .NET 2.0 Workaround for PathTooLongException
 </summary>
 <remarks>
 http://www.codeproject.com/Articles/22013/NET-Workaround-for-PathTooLongException
 </remarks>
</member>
<member name="M:Microsoft.VisualBasic.Win32File.GetShare(System.IO.FileShare)">
 <summary>
 uint GetShare(FileShare share)
 Converts the FileShare constant to win32 constant
 </summary>
 <param name="share"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Win32File.OpenRead(System.String)">
 <summary>
 Open readonly file mode open(String, FileMode.Open, FileAccess.Read, FileShare.Read)
 </summary>
 <param name="filepath"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Win32File.OpenWrite(System.String)">
 <summary>
 open writable open(String, FileMode.OpenOrCreate, FileAccess.Write, FileShare.None).
 </summary>
 <param name="filepath"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.FuzzyMatchString.Equals(System.String,System.String)">
 <summary>
 两个参数字符串是否模糊等价？
 </summary>
 <param name="string1"></param>
 <param name="string2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.FuzzyMatchString.StringSelection(System.String,System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 从一个不直接相等的字符串列表之中模糊的查找出匹配度最高的目标字符串
 </summary>
 <param name="query"></param>
 <param name="List"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.ProgramPathSearchTool">
 <summary>
 Search the path from a specific keyword.(通过关键词来推测路径)
 </summary>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.GetFile(System.String,System.String,System.String[])">
 <summary>
 
 </summary>
 <param name="Dir"></param>
 <param name="Keyword"></param>
 <param name="Ext">元素的排布是有顺序的</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.LoadSourceEntryList(System.String,System.String[])">
 <summary>
 请注意，本方法是不能够产生具有相同的主文件名的数据的。假若目标GBK是使用本模块之中的方法保存或者导出来的，
 则可以使用本方法生成Entry列表；（在返回的结果之中，KEY为文件名，没有拓展名，VALUE为文件的路径）
 </summary>
 <param name="source"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.LoadEntryList(System.String,System.String[])">
 <summary>
 允许有重复的数据
 </summary>
 <param name="Source"></param>
 <param name="Ext"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.SourceCopy(System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean)">
 <summary>
 将不同来源<paramref name="source"></paramref>的文件复制到目标文件夹<paramref name="copyto"></paramref>之中
 </summary>
 <param name="source"></param>
 <param name="copyto"></param>
 <returns>返回失败的文件列表</returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.SearchProgram(System.String,System.String)">
 <summary>
 Invoke the search session for the program file using a specific keyword string value.(使用某个关键词来搜索目标应用程序)
 </summary>
 <param name="Dir"></param>
 <param name="Keyword"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.SearchScriptFile(System.String,System.String,System.String)">
 <summary>
 
 </summary>
 <param name="Dir"></param>
 <param name="Keyword"></param>
 <param name="withExtension">脚本文件的文件拓展名</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.SearchDirectory(System.String,System.String)">
 <summary>
 
 </summary>
 <param name="SpecificDrive">所制定进行搜索的驱动器，假若希望搜索整个硬盘，请留空字符串</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.ProgramPathSearchTool.BranchRule(System.String,System.String)">
 <summary>
 商标搜索规则
 </summary>
 <param name="ProgramFiles"></param>
 <param name="Keyword"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.IEnumerations.GetItem``3(``2,System.Collections.Generic.IEnumerable{``2})">
 <summary>
 use the overload method <see cref="M:Microsoft.VisualBasic.ComponentModel.Collection.Generic.PairItem`2.Equals(Microsoft.VisualBasic.ComponentModel.Collection.Generic.PairItem{`0,`1})"></see> of the type 
 <see cref="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.PairItem`2"></see>
 </summary>
 <typeparam name="TItem1"></typeparam>
 <typeparam name="TItem2"></typeparam>
 <typeparam name="pairItem"></typeparam>
 <param name="Item"></param>
 <param name="Collection"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.IEnumerations.Takes``1(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{``0})">
 <summary>
 按照UniqueId列表来筛选出目标集合
 </summary>
 <typeparam name="T"></typeparam>
 <param name="IdList"></param>
 <param name="TargetCollection"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.IEnumerations.ToDictionary``1(System.Collections.Generic.IEnumerable{``0})">
 <summary>
 将目标集合对象转换为一个字典对象
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Collection"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.MemoryDump.InternalCreateDumpInvoke(System.Object,System.Int32)">
 <summary>
 Create memory dump for a class object instance
 </summary>
 <param name="obj"></param>
 <param name="DumpLevel"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Webpage.Get_href(System.String)">
 <summary>
 
 </summary>
 <param name="strData">A string that contains the url string pattern like: href="url_text"</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.INIProfile">
 <summary>
 Wrapper class for *.ini and *.inf configure file.(可能文件中的注释行会受到影响，所以请尽量使用本类型中的两个静态函数来操作INI文件)
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.INIProfile.GetValue(System.String,System.String,System.String)">
 <summary>
 Get the value from a specific section/key in a file of path 
 </summary>
 <param name="path"></param>
 <param name="key"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.VBMath.Sum(System.Collections.Generic.IEnumerable{System.Boolean})">
 <summary>
 Logical true values are regarded as one, false values as zero. For historical reasons, NULL is accepted and treated as if it were integer(0).
 </summary>
 <param name="bc"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.VBMath.STD(System.Double[])">
 <summary>
 Standard Deviation
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.VBMath.STD(System.Int32[])">
 <summary>
 Standard Deviation
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.VBMath.STD(System.Int64[])">
 <summary>
 Standard Deviation
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.VBMath.STD(System.Single[])">
 <summary>
 Standard Deviation
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.VBMath.EuclideanDistance(System.Collections.Generic.IEnumerable{System.Double})">
 <summary>
 多位坐标的欧几里得距离
 </summary>
 <param name="Vector"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.VBMath.GenerateMapping(System.Collections.Generic.IEnumerable{System.Double},System.Int32)">
 <summary>
 如果每一个数值之间都是相同的大小，则返回原始数据，因为最大值与最小值的差为0，无法进行映射的创建（会出现除0的错误）
 </summary>
 <param name="data"></param>
 <returns></returns>
 <remarks>为了要保持顺序，不能够使用并行拓展</remarks>
</member>
<member name="M:Microsoft.VisualBasic.VBMath.GenerateMapping(System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
 <summary>
 如果每一个数值之间都是相同的大小，则返回原始数据，因为最大值与最小值的差为0，无法进行映射的创建（会出现除0的错误）
 </summary>
 <param name="data"></param>
 <returns></returns>
 <remarks>为了要保持顺序，不能够使用并行拓展</remarks>
</member>
<member name="M:Microsoft.VisualBasic.Logging.LanguageHelper.LanguageAttribute.#ctor(Microsoft.VisualBasic.Logging.LanguageHelper.LanguageHelper.Languages,System.String)">
 <summary>
 
 </summary>
 <param name="Language">The language of the target object.</param>
 <param name="Context"></param>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.Logging.LanguageHelper.LanguageHelper.Languages">
 <summary>
 Enum the mainly used language.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.Logging.LanguageHelper.LanguageHelper.Languages.System">
 <summary>
 Following the system default language.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.Logging.LanguageHelper.LanguageHelper.Languages.ZhCN">
 <summary>
 Language in Chinese simplify.
 (简体中文) 
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.Logging.LanguageHelper.LanguageHelper.Languages.EnUS">
 <summary>
 Language in English.
 (英语语言)
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.Logging.LanguageHelper.LanguageHelper.Languages.FrFR">
 <summary>
 Language in french.
 (法语语言)
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Logging.LanguageHelper.LanguageHelper.Text(Microsoft.VisualBasic.Logging.LanguageHelper.LanguageHelper.Languages)">
 <summary>
 Get the string that store as specific language.
 (获取指定语言的字符串)
 </summary>
 <param name="Language">字符串的语言</param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Logging.LanguageHelper.LanguageHelper.GetAttribute``1(System.Reflection.PropertyInfo)">
 <summary>
 Get the specific type of custom attribute from a property.
 (从一个属性对象中获取特定的自定义属性对象)
 </summary>
 <typeparam name="T">The type of the custom attribute.(自定义属性的类型)</typeparam>
 <param name="Property">Target property object.(目标属性对象)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Logging.LanguageHelper.LanguageHelper.GetAttribute``1(System.Reflection.MemberInfo)">
 <summary>
 Get the specific type of custom attribute from a property.
 (从一个属性对象中获取特定的自定义属性对象)
 </summary>
 <typeparam name="T">The type of the custom attribute.(自定义属性的类型)</typeparam>
 <param name="Property">Target property object.(目标属性对象)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Logging.LanguageHelper.LanguageHelper.GetAttribute``1(System.Reflection.MethodInfo)">
 <summary>
 Get the specific type of custom attribute from a property.
 (从一个属性对象中获取特定的自定义属性对象)
 </summary>
 <typeparam name="T">The type of the custom attribute.(自定义属性的类型)</typeparam>
 <param name="Property">Target property object.(目标属性对象)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.Logging.LogFile">
 <summary>
 日志文件记录模块.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.Logging.LogFile.MsgTypes">
 <summary>
 The types enumeration of the log file message.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.Logging.LogFile.MsgTypes.INF">
 <summary>
 The normal information message.[WHITE]
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.Logging.LogFile.MsgTypes.ERR">
 <summary>
 The program error information message.[RED]
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.Logging.LogFile.MsgTypes.WRN">
 <summary>
 Warnning message from the program.[YELLOW]
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.Logging.LogFile.MsgTypes.DEBUG">
 <summary>
 The program debug information message.[BLUE]
 </summary>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Logging.LogFile.SuppressError">
 <summary>
 Indicated that write the <see cref="F:Microsoft.VisualBasic.Logging.LogFile.MsgTypes.ERR">Error type</see> message to the console screen, this 
 property will override the WriteToScreen parameter in function <see cref="M:Microsoft.VisualBasic.Logging.LogFile.WriteLine(System.String)"></see> when the 
 message type is <see cref="F:Microsoft.VisualBasic.Logging.LogFile.MsgTypes.ERR">Error type</see>.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Logging.LogFile.SuppressWarns">
 <summary>
 Indicated that write the <see cref="F:Microsoft.VisualBasic.Logging.LogFile.MsgTypes.WRN">Warn type</see> message to the console screen, this 
 property will override the WriteToScreen parameter in function <see cref="M:Microsoft.VisualBasic.Logging.LogFile.WriteLine(System.String)"></see> when the 
 message type is <see cref="F:Microsoft.VisualBasic.Logging.LogFile.MsgTypes.WRN">Warn type</see>.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Logging.LogFile.ColorfulOutput">
 <summary>
 是否采用彩色的输出，默认为关闭：
 <see cref="F:Microsoft.VisualBasic.Logging.LogFile.MsgTypes.INF">一般的消息</see> - 白色; 
 <see cref="F:Microsoft.VisualBasic.Logging.LogFile.MsgTypes.WRN">警告级别的消息</see> - 黄色; 
 <see cref="F:Microsoft.VisualBasic.Logging.LogFile.MsgTypes.ERR">错误级别的消息</see> - 红色
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Logging.LogFile.FileName">
 <summary>
 没有路径名称和拓展名，仅包含有单独的文件名
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Logging.LogFile.NowTimeNormalizedString">
 <summary>
 将时间字符串里面的":"符号去除之后，剩余的字符串可以用于作为路径来使用
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Logging.LogFile.Mute">
 <summary>
 当这个设置为真之后，终端就不会再有任何的输出了
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Logging.LogFile.#ctor(System.String,System.Boolean)">
 <summary>
 
 </summary>
 <param name="Path">This logfile will saved to.</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Logging.LogFile.SaveLog(System.Boolean)">
 <summary>
 
 </summary>
 <param name="appendToLogFile">Append this log data into the target log file if the file is exists on the filesystem, default option is override the exists file.</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Logging.LogFile.WriteLine(System.String,System.String[])">
 <summary>
 
 </summary>
 <param name="s"></param>
 <param name="args">{[Object] As String, Optional Type As MsgType = MsgType.INF, Optional WriteToScreen As Boolean = True}</param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Logging.LogFile.Save(System.String,System.Text.Encoding)">
 <summary>
 直接进行覆盖的
 </summary>
 <param name="FilePath"></param>
 <param name="Encoding"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.Extensions">
 <summary>
 Common extension methods library for convenient the programming job.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.CopyTypeDef``2(System.Collections.Generic.Dictionary{``0,``1})">
 <summary>
 
 </summary>
 <typeparam name="TKey"></typeparam>
 <typeparam name="TValue"></typeparam>
 <param name="source">仅仅是起到类型复制的作用</param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.CopyTypeDef``1(System.Collections.Generic.List{``0})">
 <summary>
 
 </summary>
 <typeparam name="T"></typeparam>
 <param name="IList">仅仅是起到类型复制的作用</param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.CliPath(System.String)">
 <summary>
 假若命令行之中的文件名参数之中含有空格的话，则可能会造成错误，需要添加一个双引号来消除歧义
 </summary>
 <param name="Path"></param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.NormalizeXMLString(System.String)">
 <summary>
 对Xml文件之中的特殊字符进行转义处理
 </summary>
 <param name="str"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.RunCLI(System.Type,System.String)">
 <summary>
 Running the string as a cli command line.
 </summary>
 <param name="arg">The command line arguments value, which its value can be gets from the <see cref="M:Microsoft.VisualBasic.Interaction.Command"/> function.</param>
 <returns>Returns the function execute result to the operating system.</returns>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.GetAttribute``1(System.Reflection.MemberInfo)">
 <summary>
 Get the specific type of custom attribute from a property.
 (从一个属性对象中获取特定的自定义属性对象)
 </summary>
 <typeparam name="T">The type of the custom attribute.(自定义属性的类型)</typeparam>
 <param name="Property">Target property object.(目标属性对象)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.GetAttribute``1(System.Reflection.PropertyInfo)">
 <summary>
 Get the specific type of custom attribute from a property.
 (从一个属性对象中获取特定的自定义属性对象)
 </summary>
 <typeparam name="T">The type of the custom attribute.(自定义属性的类型)</typeparam>
 <param name="Property">Target property object.(目标属性对象)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.ToFileURL(System.String)">
 <summary>
 Gets the URL type file path.(获取URL类型的文件路径)
 </summary>
 <param name="Path"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.Extensions.GetAnonymousTypeList``1(System.Collections.Generic.IEnumerable{``0})">
 <summary>
 You can using this method to create a empty list for the specific type of anonymous type object.
 (使用这个方法获取得到匿名类型的列表数据集合对象)
 </summary>
 <typeparam name="TAnonymousType"></typeparam>
 <param name="typedef">The temp object which was created anonymous.(匿名对象的集合)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.StringSplit(System.String,System.String,System.Boolean)">
 <summary>
 This method is used to replace most calls to the Java String.split method.
 </summary>
 <param name="source"></param>
 <param name="regexDelimiter"></param>
 <param name="trimTrailingEmptyStrings"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.GetDelegateInvokeEntryPoint(System.Object)">
 <summary>
 Get the method reflection entry point for a anonymous lambda expression.(当函数返回Nothing的时候说明目标对象不是一个函数指针)
 </summary>
 <param name="obj"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.ToMatrix``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
 <summary>
 Convert the data collection into a matrix value.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="collection">The elements number in each collection should be agreed!(要求集合之中的每一列之中的数据的元素数目都相等)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.MatrixToVectorList``1(``0[0:,0:])">
 <summary>
 Convert the matrix data into a collection of collection data type.(将矩阵对象转换为集合的集合的类型)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="MAT"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.Extensions.SlideWindowHandle`1">
 <summary>
 滑窗操作的数据模型
 </summary>
 <typeparam name="T"></typeparam>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Extensions.SlideWindowHandle`1.p">
 <summary>
 在创建的滑窗的队列之中当前的窗口对象的位置
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Extensions.SlideWindowHandle`1.Left">
 <summary>
 当前窗口在原始的序列之中的左端起始位点
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Extensions.SlideWindowHandle`1.Length">
 <summary>
 窗口长度
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.CreateSlideWindows``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
 <summary>
 Create a collection of slide Windows data for the target collection object.(创建一个滑窗集合)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="data"></param>
 <param name="slideWindowSize">窗口的大小</param>
 <param name="offset">在序列之上移动的步长</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.Extensions.NIL">
 <summary>
 Chr(0): NULL char
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.SplitCollection``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
 <summary>
 将目标集合之中的数据按照<paramref name="splitCount"></paramref>参数分配到子集合之中，这个函数之中不能够使用并行化计数，以保证元素之间的相互原有的顺序
 </summary>
 <typeparam name="T"></typeparam>
 <param name="collection"></param>
 <param name="splitCount">每一个子集合之中的元素的数目</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Invoke(System.Diagnostics.Process)">
 <summary>
 本方法会执行外部命令并等待其执行完毕，函数返回状态值
 </summary>
 <param name="Process"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.RandomDouble">
 <summary>
 Gets a random number in the region of [0,1]. (获取一个[0,1]区间之中的随机数)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.FileExists(System.String)">
 <summary>
 Check if the target file object is exists on your file system or not.(这个函数也会自动检查目标<paramref name="path"/>参数是否为空)
 </summary>
 <param name="path"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.BaseName(System.String)">
 <summary>
 获取目标文件夹的名称
 </summary>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.Extensions.GetElementCounts``1(System.Collections.Generic.IEnumerable{``0})">
 <summary>
 Gets the element counts in the target data collection, if the collection object is nothing or empty 
 then this function will returns ZERO, others returns Collection.Count.(返回一个数据集合之中的元素的数目，
 假若这个集合是空值或者空的，则返回0，其他情况则返回Count拓展函数的结果) 
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Collection"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.Extensions.GPL3">
<summary>
  Looks up a localized string similar to                     GNU GENERAL PUBLIC LICENSE
                       Version 3, 29 June 2007

 Copyright (C) 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.

                            Preamble

  The GNU General Public License is a free, copyleft license for
software and other kinds of works.

  The licenses for most software and other practical works are designed
to take away yo [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.GetString(System.String,System.Char)">
 <summary>
 获取""或者其他字符所包围的字符串的值
 </summary>
 <param name="s"></param>
 <param name="wrapper"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.SetValueMethod``1(``0@,``0)">
 <summary>
 Value assignment to the target variable. 
 </summary>
 <typeparam name="T"></typeparam>
 <param name="var"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Free``1(``0@)">
 <summary>
 Free this variable pointer in the memory.(销毁本对象类型在内存之中的指针)
 </summary>
 <typeparam name="T">假若该对象类型实现了<see cref="T:System.IDisposable"></see>接口，则函数还会在销毁前调用该接口的销毁函数</typeparam>
 <param name="obj"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Pause(System.String)">
 <summary>
 Pause the console program.
 </summary>
 <param name="Prompted"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.ParseDouble(System.String)">
 <summary>
 使用正则表达式解析目标字符串对象之中的一个实数
 </summary>
 <param name="s"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.ReadUltraLargeTextFile(System.String,System.Text.Encoding)">
 <summary>
 当所被读取的文本文件的大小超过了<see cref="T:System.Text.StringBuilder"></see>的上限的时候，就需要使用本方法进行读取操作了。<paramref name="Path">目标文件</paramref>必须是已经存在的文件
 </summary>
 <param name="Path">目标文件必须是已经存在的文件</param>
 <param name="Encoding"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Collection2GenericIEnumerable(System.Type)">
 <summary>
 Try convert the type specific collection data type into a generic enumerable collection data type.(尝试将目标集合类型转换为通用的枚举集合类型)
 </summary>
 <param name="Type">The type specific collection data type.(特定类型的集合对象类型，当然也可以是泛型类型)</param>
 <returns>If the target data type is not a collection data type then the original data type will be returns and the function displays a warning message.</returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.SavePackage(System.Collections.Generic.IEnumerable{System.Byte},System.String)">
 <summary>
 Save the binary data into the filesystem.(保存二进制数据包值文件系统)
 </summary>
 <param name="ChunkBuffer">The binary bytes data of the target package's data.(目标二进制数据)</param>
 <param name="SavePath">The saved file path of the target binary data chunk.(目标二进制数据包所要进行保存的文件名路径)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.InvokeSet``2(``0,System.String,``1)">
 <summary>
 如果发生错误，则原有的对象<paramref name="obj"/>不会被修改
 </summary>
 <typeparam name="T"></typeparam>
 <typeparam name="Tvalue"></typeparam>
 <param name="obj"></param>
 <param name="Name">可以使用NameOf得到需要进行修改的属性名称</param>
 <param name="value"></param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.InvokeSet``1(``0,System.Action)">
 <summary>
 Execute a property modify method and then return the target instance object.(修改目标对象的属性之后返回目标对象)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="obj"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.ModifyValue``1(System.Reflection.PropertyInfo,``0,System.Func{System.Object,System.Object})">
 <summary>
 Modify target object property value using a <paramref name="valueModifier">specific value provider</paramref> and then return original instance object.
 (修改目标对象的属性之后返回目标对象)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="obj"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.FlushMemory">
 <summary>
 Rabbish collection to free the junk memory.(垃圾回收)
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.InsertOrUpdate``1(System.Collections.Generic.Dictionary{System.String,``0}@,``0)">
 <summary>
 向字典对象之中更新或者插入新的数据，假若目标字典对象之中已经存在了一个数据的话，则会将原有的数据覆盖，并返回原来的数据
 </summary>
 <typeparam name="T"></typeparam>
 <param name="dict"></param>
 <param name="item"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.MatrixToVector``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
 <summary>
 Merge the target array collection into one collection.(将目标数组的集合合并为一个数组)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Collection"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.MatrixToUltraLargeVector``1(System.Collections.Generic.IEnumerable{``0[]})">
 <summary>
 Merge the target array collection into one collection.(将目标数组的集合合并为一个数组，这个方法是提供给超大的集合的，即元素的数目非常的多的，即超过了<see cref="T:System.Int32"></see>的上限值)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Collection"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.AddRange``1(System.Collections.Generic.LinkedList{``0},System.Collections.Generic.IEnumerable{``0})">
 <summary>
 Add a linked list of a collection of specific type of data.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="list"></param>
 <param name="data"></param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.MatrixTranspose``1(System.Collections.Generic.IEnumerable{``0[]})">
 <summary>
 矩阵转置： 将矩阵之中的元素进行行列位置的互换
 </summary>
 <typeparam name="T">矩阵之中的元素类型</typeparam>
 <param name="MAT">为了方便理解和使用，矩阵使用数组的数组来表示的</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.MatrixTransposeIgnoredDimensionAgreement``1(System.Collections.Generic.IEnumerable{``0[]})">
 <summary>
 将矩阵之中的元素进行行列位置的互换，请注意，假若长度不一致的话，会按照最短的元素来转置，故而使用本函数可能会造成一些信息的丢失
 </summary>
 <typeparam name="T"></typeparam>
 <param name="MAT"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.ToEntriesDictionary``1(System.Collections.Generic.IEnumerable{``0})">
 <summary>
 
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Collection">请务必要确保集合之中的元素的<see cref="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IAccessionIdEnumerable.UniqueId"></see></param>属性是唯一的，否则会出错
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Intersection(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})">
 <summary>
 求交集
 </summary>
 <param name="Chunkbuffer"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Is_NA_UHandle(System.Double)">
 <summary>
 判断目标实数是否为一个无穷数或者非计算的数字，产生的原因主要来自于除0运算结果或者达到了<see cref="T:System.Double"></see>的上限或者下限
 </summary>
 <param name="n"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.FuzzyMatching(System.String,System.String)">
 <summary>
 Fuzzy match two string, this is useful for the text query or searching.
 </summary>
 <param name="Query"></param>
 <param name="Subject"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.get_BooleanValue(System.String)">
 <summary>
 Convert the string value into the boolean value, this is useful to the text format configuration file into data model.
 </summary>
 <param name="strValue"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.StdError(System.Collections.Generic.IEnumerable{System.Double})">
 <summary>
 求取该数据集的标准差
 </summary>
 <param name="data"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.CountStringTokens(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
 <summary>
 Count the string value numbers.(请注意，这个函数是倒序排序的)
 </summary>
 <param name="Collection"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Description(System.Enum)">
 <summary>
 Get the description data from a enum type value, if the target have no <see cref="T:System.ComponentModel.DescriptionAttribute"></see> attribute data 
 then function will return the string value from the ToString() function.
 </summary>
 <param name="e"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.TrimNull``1(System.Collections.Generic.IEnumerable{``0})">
 <summary>
 Remove all of the null object in the target object collection
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Collection"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.Extensions.RandomizeElements``1(System.Collections.Generic.IEnumerable{``0})">
 <summary>
 Return a collection with randomize element position in <paramref name="Collection">the original collection</paramref>.(从原有序序列中获取一个随机元素的序列)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Collection"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.Extensions.GetItem``1(System.Collections.Generic.IEnumerable{``0},System.String,System.StringComparison)">
 <summary>
 Get a specific item value from the target collction data using its UniqueID property，
 (请注意，请尽量不要使用本方法，因为这个方法的效率有些低，对于获取<see cref="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.IAccessionIdEnumerable">
 </see>类型的集合之中的某一个对象，请尽量先转换为字典对象，在使用该字典对象进行查找以提高代码效率，使用本方法的优点是可以选择忽略<paramref name="UniqueId">
 </paramref>参数之中的大小写，以及对集合之中的存在相同的Key的这种情况的容忍)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Collection"></param>
 <param name="UniqueId"></param>
 <param name="IgnoreCase"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.GetFirstValue``1(System.Collections.Generic.IEnumerable{``0})">
 <summary>
 Get the value of the first element, if the collection is null or empty then return nothing as default value
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Collection"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.Extensions.CopyTo``1(``0,``0@)">
 <summary>
 Copy the value in <paramref name="value"></paramref> into target variable <paramref name="target"></paramref> and then return the target variable.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="value"></param>
 <param name="target"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.TakeRandomly``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
 <summary>
 随机的在目标集合中选取指定数目的子集合
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Collection"></param>
 <param name="Counts">当目标数目大于或者等于目标集合的数目的时候，则返回目标集合</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.ToStringArray``1(System.Collections.Generic.IEnumerable{``0})">
 <summary>
 Convert target object type collection into a string array using the Object.ToString() interface function.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Collection"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Union(System.String[],System.String[])">
 <summary>
 Get a sub set of the string data which is contains in both collection <paramref name="strArray1"></paramref> and <paramref name="strArray2"></paramref>
 </summary>
 <param name="strArray1"></param>
 <param name="strArray2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.SwapWith``1(``0@,``0@)">
 <summary>
 Swap the value in the two variables.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="obj1"></param>
 <param name="obj2"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.SwapItem``1(System.Collections.Generic.List{``0}@,``0,``0)">
 <summary>
 Swap the two item position in the target <paramref name="List">list</paramref>.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="List"></param>
 <param name="obj_1"></param>
 <param name="obj_2"></param>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.AddHandle``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
 <summary>
 为列表中的对象添加对象句柄值
 </summary>
 <param name="Collection"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.MoveNext(System.Int32@)">
 <summary>
 <paramref name="p"></paramref> plus one and then return its previous value.
 </summary>
 <param name="p"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Sequence``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
 <summary>
 Gets the subscript index of a generic collection.(获取某一个集合的下标的集合)
 </summary>
 <typeparam name="T">集合中的元素为任意类型的</typeparam>
 <param name="Collection">目标集合对象</param>
 <returns>A integer array of subscript index of the target generic collection.</returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Takes``1(System.Collections.Generic.IEnumerable{``0},System.Int32[],System.Int32,System.Boolean)">
 <summary>
 
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Collection"></param>
 <param name="IndexCollection">所要获取的目标对象的下表的集合</param>
 <param name="reversedSelect">是否为反向选择</param>
 <param name="OffSet">当进行反选的时候，本参数将不会起作用</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.Extensions.InternalReversedTakeSelected``1(System.Collections.Generic.IEnumerable{``0},System.Int32[])">
 <summary>
 反选，即将所有不出现在<paramref name="indexs"></paramref>之中的元素都选取出来
 </summary>
 <typeparam name="T"></typeparam>
 <param name="coll"></param>
 <param name="indexs"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Sequence(System.Int32)">
 <summary>
 产生指定数目的一个递增序列
 </summary>
 <param name="n">大于或者等于0的一个数，当小于0的时候会出错</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Sequence(System.Int64)">
 <summary>
 产生指定数目的一个递增序列
 </summary>
 <param name="n"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Sequence(System.UInt32)">
 <summary>
 产生指定数目的一个递增序列
 </summary>
 <param name="n"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Join``1(System.Collections.Generic.List{``0},System.Collections.Generic.IEnumerable{``0})">
 <summary>
 向一个列表对象之中批量添加一个对象的集合
 </summary>
 <typeparam name="T"></typeparam>
 <param name="List"></param>
 <param name="Collection"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
 <summary>
 将目标键值对对象的集合转换为一个字典对象
 </summary>
 <typeparam name="TKey"></typeparam>
 <typeparam name="TValue"></typeparam>
 <param name="Collection"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})">
 <summary>
 This object collection is a null object or contains zero count items.(判断某一个对象集合是否为空)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Collection"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.IsNullOrEmpty(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
 <summary>
 判断这个字符串集合是否为空集合，函数会首先按照常规的集合为空进行判断，然后假若不为空的话，假若只含有一个元素并且该唯一的元素的值为空字符串，则也认为这个字符串集合为空集合
 </summary>
 <param name="stringCollection"></param>
 <param name="strict">FALSE 为非严谨，只进行常规判断，TRUE 为严谨模式，会假若不为空的话，假若只含有一个元素并且该唯一的元素的值为空字符串，则也认为这个字符串集合为空集合</param>
 <returns></returns>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.SaveTo(System.String,System.String,System.Text.Encoding)">
 <summary>
 Write the text file data into a file which was specific by the <paramref name="Path"></paramref> value, 
 this function not append the new data onto the target file.
 (将目标文本字符串写入到一个指定路径的文件之中，但是不会在文件末尾追加新的数据)
 </summary>
 <param name="Path"></param>
 <param name="TextValue"></param>
 <param name="Encoding"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.SaveTo(System.Collections.Generic.IEnumerable{System.String},System.String,System.Text.Encoding)">
 <summary>
 将目标字符串数据全部写入到文件之中，当所写入的文件位置之上没有父文件夹存在的时候，会自动创建文件夹
 </summary>
 <param name="array"></param>
 <param name="path"></param>
 <param name="encoding"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.GetXml``1(``0)">
 <summary>
 Serialization the target object type into a XML document.(将一个类对象序列化为XML文档)
 </summary>
 <typeparam name="T">The type of the target object data should be a class object.(目标对象类型必须为一个Class)</typeparam>
 <param name="obj"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.LoadXml``1(System.String,System.Text.Encoding,System.Boolean)">
 <summary>
 从文件之中加载XML之中的数据至一个对象类型之中
 </summary>
 <typeparam name="T"></typeparam>
 <param name="XmlFile">XML文件的文件路径</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Serialize``1(``0,System.String)">
 <summary>
 使用二进制序列化保存一个对象
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Obj"></param>
 <param name="path"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Load``1(System.String)">
 <summary>
 使用反二进制序列化从指定的文件之中加载一个对象
 </summary>
 <typeparam name="T"></typeparam>
 <param name="path"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.CreateObjectFromXml``1(System.String,System.Boolean)">
 <summary>
 Generate a specific type object from a xml document stream.(使用一个XML文本内容创建一个XML映射对象)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Xml">This parameter value is the document text of the xml file, not the file path of the xml file.(是Xml文件的文件内容而非文件路径)</param>
 <param name="ThrowEx">Should this program throw the exception when the xml deserialization error happens? 
 if False then this function will returns a null value instead of throw exception.
 (在进行Xml反序列化的时候是否抛出错误，默认抛出错误，否则返回一个空对象)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.CreateObjectFromXmlSegment``1(System.String)">
 <summary>
 使用一个XML文本内容的一个片段创建一个XML映射对象
 </summary>
 <typeparam name="T"></typeparam>
 <param name="Xml">是Xml文件的文件内容而非文件路径</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Shell(System.String)">
 <summary>
 执行一个命令行语句，并返回一个IO重定向对象，以获取被执行的目标命令的标准输出
 </summary>
 <param name="CommandLine"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.Extensions.π(System.Collections.Generic.IEnumerable{System.Double})">
 <summary>
 获取一个实数集合中所有元素的积
 </summary>
 <param name="Elements"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.FillBlank(System.Drawing.Image@,System.Drawing.Brush)">
 <summary>
 Fill the newly created image data with the specific color brush
 </summary>
 <param name="Image"></param>
 <param name="FilledColor"></param>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.Extensions.ILLEGAL_PATH_CHARACTERS_ENUMERATION">
 <summary>
 枚举所有非法的路径字符
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.NormalizePathString(System.String,System.Boolean)">
 <summary>
 将目标字符串之中的非法的字符替换为"_"符号以成为正确的文件名字符串
 </summary>
 <param name="str"></param>
 <param name="OnlyASCII">当本参数为真的时候，仅26个字母，0-9数字和下划线_以及小数点可以被保留下来</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Removes``1(System.Collections.Generic.List{``0}@,System.Collections.Generic.IEnumerable{``0})">
 <summary>
 Remove all of the element in the <paramref name="collection"></paramref> from target <paramref name="List">list</paramref>
 </summary> 
 <typeparam name="T"></typeparam>
 <param name="List"></param>
 <param name="collection"></param>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.GetValue(System.String)">
 <summary>
 获取两个尖括号之间的内容
 </summary>
 <param name="strData"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.Extensions.Get_PageContent(System.String,System.UInt32,System.Boolean)">
 <summary>
 Get the html page content from a website request or a html file on the local filesystem.
 </summary>
 <param name="url">web http request url or a file path handle</param>
 <param name="RequestTimeOut">发生错误的时候的重试的次数</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:Microsoft.VisualBasic.Extensions.DownloadFile(System.String,System.String)">
 <summary>
 download the file from <paramref name="strUrl"></paramref> to <paramref name="SavedPath">local file</paramref>.
 </summary>
 <param name="strUrl"></param>
 <param name="SavedPath"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.MMFProtocol.MMFSocket">
 <summary>
 MMFProtocol socket object for the inter-process communication on the localhost, this can be using for the data exchange between two process.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.MMFProtocol.MMFSocket.MMFClient._UpdateFlag">
 <summary>
 内存映射文件的更新标识符
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.MMFProtocol.MMFSocket.MMFClient.__ClientThread">
 <summary>
 客户端的监听线程
 </summary>
 <remarks></remarks>
</member>
<member name="E:Microsoft.VisualBasic.MMFProtocol.MMFSocket.MMFClient.DataArrival">
 <summary>
 客户端接受到的数据需要经过反序列化解码方能读取
 </summary>
 <param name="data"></param>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.MMFProtocol.MMFSocket.MMFClient.ChunkSize">
 <summary>
 内存映射文件的数据块的预分配大小
 </summary>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.MMFProtocol.MMFSocket.MMFServer">
 <summary>
 
 </summary>
 <remarks>
 mmfServer的主要功能是创建并维护一个内存映射文件
 </remarks>
</member>
<member name="M:Microsoft.VisualBasic.MMFProtocol.MMFSocket.MMFServer.#ctor(System.String)">
 <summary>
 
 </summary>
 <param name="host"></param>
 <remarks>对象实例会首先尝试以服务器的角色建立连接，当不成功的时候会以客户端的形式建立连接</remarks>
</member>
<member name="F:Microsoft.VisualBasic.MMFProtocol.MMFSocket.MMF_File.byteData">
 <summary>
 内存映射文件中所存储的将要进行进程间交换的数据
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.MMFProtocol.MMFSocket.#ctor(System.String,Microsoft.VisualBasic.MMFProtocol.MMFSocket.I_DataArrivalCallBack)">
 <summary>
 
 </summary>
 <param name="hostName"></param>
 <param name="dataArrivalCallBack">会优先于事件<see cref="E:Microsoft.VisualBasic.MMFProtocol.MMFSocket.DataArrival"></see>的发生</param>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.MMFProtocol.ProcessLock">
 <summary>
 进程排斥锁
 </summary>
 <remarks></remarks>
</member>
<member name="F:Microsoft.VisualBasic.MMFProtocol.ProcessLock._ProcessLock">
 <summary>
 进程排斥锁
 </summary>
 <remarks>
 程序中采用一个进程排斥锁是由于待日后Mono运行时环境在Linux平台中的WinForm GTK成熟后，向Linux平台迁移，
 由于Visual Baisc/C#所编写的应用程序需要保持单个进程，则需要启用应用程序框架，而很多情况下为了优化的需求应用程序
 无法使用应用程序框架，为了实现一次编译到处运行的目的，程序的代码不会再平台间进行修改，
 由于Linux平台之上不能使用Win32API来保持单进程，为了保持程序对Windows/Linux/MAC三大操作系统的兼容性，故而在这里使用了一个进程排斥锁
 </remarks>
</member>
<member name="F:Microsoft.VisualBasic.MMFProtocol.ProcessLock.f_ProcessLock">
 <summary>
 进程锁的排斥情况
 </summary>
 <remarks></remarks>
</member>
<member name="M:Microsoft.VisualBasic.MMFProtocol.ProcessLock.#ctor(System.String)">
 <summary>
 
 </summary>
 <param name="strHost">进程排斥锁的锁名</param>
 <remarks></remarks>
</member>
<member name="P:Microsoft.VisualBasic.MMFProtocol.ProcessLock.Locked">
 <summary>
 返回当前的进程是否被加锁
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Microsoft.VisualBasic.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Microsoft.VisualBasic.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Microsoft.VisualBasic.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:Microsoft.VisualBasic.My.Resources.Resources.CPOL">
<summary>
  Looks up a localized string similar to ?&lt;html&gt;
&lt;head&gt;
&lt;title&gt;The Code Project Open License (CPOL)&lt;/title&gt;
&lt;Style&gt;
BODY, P, TD { font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10pt }
H1,H2,H3,H4,H5 { color: #ff9900; font-weight: bold; }
H1 { font-size: 14pt;color:black }
H2 { font-size: 13pt; }
H3 { font-size: 12pt; }
H4 { font-size: 10pt; color: black; }
PRE { BACKGROUND-COLOR: #FBEDBB; FONT-FAMILY: &quot;Courier New&quot;, Courier, mono; WHITE-SPACE: pre; }
CODE { COLOR: #990000; FONT-FAMILY: &quot;Courier New&quot;, Courier, mono; }
.S [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:Microsoft.VisualBasic.My.Resources.Resources.gpl">
<summary>
  Looks up a localized string similar to                     GNU GENERAL PUBLIC LICENSE
                       Version 3, 29 June 2007

 Copyright (C) 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.

                            Preamble

  The GNU General Public License is a free, copyleft license for
software and other kinds of works.

  The licenses for most software and other practical works are designed
to take away yo [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:Microsoft.VisualBasic.My.Resources.Resources.license">
<summary>
  Looks up a localized string similar to This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU  [rest of string was truncated]&quot;;.
</summary>
</member>
</members>
</doc>

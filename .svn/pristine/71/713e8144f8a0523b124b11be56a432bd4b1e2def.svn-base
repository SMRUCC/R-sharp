<!DOCTYPE html>

<html lang="en">

	<head>
		
		<meta charset="utf-8">
		<title>System.String</title>
		
		<style>::-moz-selection {
        background: #b3d4fc;
        text-shadow: none;
      }

      ::selection {
        background: #b3d4fc;
        text-shadow: none;
      }

      html {
        padding: 30px 10px;
        font-size: 16px;
        line-height: 1.4;
        color: #737373;
        background: #f0f0f0;
        -webkit-text-size-adjust: 100%;
        -ms-text-size-adjust: 100%;
      }

      html,
      input {
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
      }

      body {
        max-width: 1500px;
        _width: 1500px;
        padding: 30px 20px 50px;
        border: 1px solid #b3b3b3;
        border-radius: 4px;
        margin: 0 auto;
        box-shadow: 0 1px 10px #a7a7a7, inset 0 1px 0 #fff;
        background: #fcfcfc;
      }

      h1 {
        margin: 0 10px;
        font-size: 35px;
        text-align: center;
      }

      h1 span {
        color: #bbb;
      }

      h3 {
        margin: 1.5em 0 0.5em;
      }

      p {
        margin: 1em 0;
      }

      ul {
        padding: 0 0 0 40px;
        margin: 1em 0;
      }

      .container {
        max-width: 900px;
        _width: 900px;
        margin: 0 auto;
      }

      /* google search */

      #goog-fixurl ul {
        list-style: none;
        padding: 0;
        margin: 0;
      }

      #goog-fixurl form {
        margin: 0;
      }

      #goog-wm-qt,
      #goog-wm-sb {
        border: 1px solid #bbb;
        font-size: 16px;
        line-height: normal;
        vertical-align: top;
        color: #444;
        border-radius: 2px;
      }

      #goog-wm-qt {
        width: 220px;
        height: 20px;
        padding: 5px;
        margin: 5px 10px 0 0;
        box-shadow: inset 0 1px 1px #ccc;
      }

      #goog-wm-sb {
        display: inline-block;
        height: 32px;
        padding: 0 10px;
        margin: 5px 0 0;
        white-space: nowrap;
        cursor: pointer;
        background-color: #f5f5f5;
        background-image: -webkit-linear-gradient(rgba(255,255,255,0), #f1f1f1);
        background-image: -moz-linear-gradient(rgba(255,255,255,0), #f1f1f1);
        background-image: -ms-linear-gradient(rgba(255,255,255,0), #f1f1f1);
        background-image: -o-linear-gradient(rgba(255,255,255,0), #f1f1f1);
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        *overflow: visible;
        *display: inline;
        *zoom: 1;
      }

      #goog-wm-sb:hover,
      #goog-wm-sb:focus {
        border-color: #aaa;
        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
        background-color: #f8f8f8;
      }

      #goog-wm-qt:hover,
      #goog-wm-qt:focus {
        border-color: #105cb6;
        outline: 0;
        color: #222;
      }

      input::-moz-focus-inner {
        padding: 0;
        border: 0;
      }</style>
	  
	  <body>
	  
	  <div class="container">
	    
	  <h1>Document for <strong>  System.String</strong> <span>:-)</span></h1>
	  <br />
			
	  <script>var GOOG_FIXURL_LANG = (navigator.language || '').slice(0,2),GOOG_FIXURL_SITE = location.host;</script>
	<!--  <script src="//linkhelp.clients.google.com/tbproxy/lh/wm/fixurl.js"></script> -->
	  </div>
	      	<font face="Microsoft YaHei" size="2">
	  	  <table>
  <tr>
    <th align="left">	  <p><h2><font size=5><span><a href="./index.html">< Back To Index</a></span></font></h2></p>
	</th>
    <th></th>
  </tr>
  <tr>
    <td>Type Name</td>
    <td align="left"><strong>System.String</strong></td>
  </tr>
 
                <tr>
    <td>Define From</td>
    <td align="left">..\</td>
  </tr>
                <tr>
    <td valign="top">Publisher</td>
    <td align="left">[Product("Microsoft® .NET Framework")]<br />[Title("mscorlib.dll")]<br />[Description("mscorlib.dll")]<br />[DefaultAlias("mscorlib.dll")]<br />[Company("Microsoft Corporation")]<br />[Copyright("© Microsoft Corporation.  All rights reserved.")]<br />[FileVersion("4.6.96.0")]<br />[InformationalVersion("4.6.96.0")]<br />[DelaySign((Boolean)True)]<br />[KeyFile("f:\dd\tools\devdiv\EcmaPublicKey.snk")]<br />[SignatureKey("002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df...</td>
  </tr>
                <tr>
    <td>Description</td>
    <td align="left">String</td>
  </tr>
  
                  <tr>
    <td></td>
    <td></td>
  </tr>
  
              
  
  </font>
</table>
<p>
	  <br />	  <br />
	  	  <br />Here list the functions which can generate this type of data, which you can reference to the function parameter:
		  <hr>
	  	<font face="Microsoft YaHei" size="2">
	  <p><table>
    <tr>
                            <th>Package Namespace</th>
    <th>API</th><th>EntryPoint</th>
    <th>Description</th>
  </tr>
    <tr>
                            <td><a href="../CommandLine.html#">CommandLine</a></td>
    <td><a href="../CommandLine.html#Join">Join</a></td>
                            <td>System.String Join(System.Collections.Generic.IEnumerable`1[System.String])</td>
    <td>ReGenerate the cli command line argument string text. NOTE: if the token have a space character, then this function will be wrap that token with quot character automatically.</td>
  </tr>
    <tr>
                            <td><a href="../CommandLine.html#">CommandLine</a></td>
    <td><a href="../CommandLine.html#TrimBooleanSwitchPrefix">TrimBooleanSwitchPrefix</a></td>
                            <td>System.String TrimBooleanSwitchPrefix(System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../Cowsay.html#">Cowsay</a></td>
    <td><a href="../Cowsay.html#Cowsay">Cowsay</a></td>
                            <td>System.String Cowsay(System.String, Boolean)</td>
    <td>Show cowsay with a specific input message on your console screen. you can using /dead to change its face.</td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#Path2Url">Path2Url</a></td>
                            <td>System.String ToFileURL(System.String)</td>
    <td>Gets the URL type file path.</td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#trim">trim</a></td>
                            <td>System.String TrimA(System.String, System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#Xml.GetAttribute">Xml.GetAttribute</a></td>
                            <td>System.String Get_XmlAttributeValue(System.String, System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#CLI_PATH">CLI_PATH</a></td>
                            <td>System.String CliPath(System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#DEBUG.ECHO">DEBUG.ECHO</a></td>
                            <td>System.String __DEBUG_ECHO(System.String, Int32)</td>
    <td>Output the full debug information while the project is debugging in debug mode.</td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#DEBUG.ECHO">DEBUG.ECHO</a></td>
                            <td>System.String __DEBUG_ECHO(System.Text.StringBuilder, Int32)</td>
    <td>Output the full debug information while the project is debugging in debug mode.</td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#Dir.basename">Dir.basename</a></td>
                            <td>System.String BaseName(System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#File.FullPath">File.FullPath</a></td>
                            <td>System.String FullPath(System.String)</td>
    <td>Gets the full path of the directory or file.</td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#File.Select">File.Select</a></td>
                            <td>System.String SelectFile(System.String)</td>
    <td>Open the file open dialog to gets the file</td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#Get.Description">Get.Description</a></td>
                            <td>System.String Description(System.Enum)</td>
    <td>Get the description data from a enum type value, if the target have no <see cref="DescriptionAttribute"></see> attribute data then function will return the string value from the ToString() function.</td>
  </tr>
    <tr>
                            <td><a href="../Large_Text_File.html#">Large_Text_File</a></td>
    <td><a href="../Large_Text_File.html#Peeks">Peeks</a></td>
                            <td>System.String Peeks(System.String, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../Large_Text_File.html#">Large_Text_File</a></td>
    <td><a href="../Large_Text_File.html#Tails">Tails</a></td>
                            <td>System.String Tails(System.String, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../Md5Hash.html#">Md5Hash</a></td>
    <td><a href="../Md5Hash.html#File.Md5">File.Md5</a></td>
                            <td>System.String GetFileHashString(System.String)</td>
    <td>Get the md5 hash calculation value for a specific file.</td>
  </tr>
    <tr>
                            <td><a href="../Md5Hash.html#">Md5Hash</a></td>
    <td><a href="../Md5Hash.html#Md5">Md5</a></td>
                            <td>System.String GetMd5Hash(System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../Md5Hash.html#">Md5Hash</a></td>
    <td><a href="../Md5Hash.html#Md5">Md5</a></td>
                            <td>System.String GetMd5Hash(Byte[])</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../Md5Hash.html#">Md5Hash</a></td>
    <td><a href="../Md5Hash.html#Uid">Uid</a></td>
                            <td>System.String NewUid()</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../MMFSocket.html#">MMFSocket</a></td>
    <td><a href="../MMFSocket.html#getMessage">getMessage</a></td>
                            <td>System.String getMessage(System.Collections.Generic.IEnumerable`1[System.Byte], System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../MMFSocket.html#">MMFSocket</a></td>
    <td><a href="../MMFSocket.html#Print.Message">Print.Message</a></td>
                            <td>System.String WriteMessage(System.Collections.Generic.IEnumerable`1[System.Byte])</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../Program.Path.Search.html#">Program.Path.Search</a></td>
    <td><a href="../Program.Path.Search.html#Get.FrequentPath">Get.FrequentPath</a></td>
                            <td>System.String GetMostAppreancePath(System.Collections.Generic.IEnumerable`1[System.String])</td>
    <td>Gets a directory path which is most frequent appeared in the file list.</td>
  </tr>
    <tr>
                            <td><a href="../Program.Path.Search.html#">Program.Path.Search</a></td>
    <td><a href="../Program.Path.Search.html#Path2File_Url">Path2File_Url</a></td>
                            <td>System.String ToFileURL(System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../Program.Path.Search.html#">Program.Path.Search</a></td>
    <td><a href="../Program.Path.Search.html#RelativePath">RelativePath</a></td>
                            <td>System.String RelativePath(System.String)</td>
    <td>Get the specific file system object its relative path to the application base directory.</td>
  </tr>
    <tr>
                            <td><a href="../Program.Path.Search.html#">Program.Path.Search</a></td>
    <td><a href="../Program.Path.Search.html#RelativePath">RelativePath</a></td>
                            <td>System.String RelativePath(System.String, System.String)</td>
    <td>Gets the relative path value of pcTo file system object relative to a reference directory pcFrom</td>
  </tr>
    <tr>
                            <td><a href="../Settings.Inf.html#">Settings.Inf</a></td>
    <td><a href="../Settings.Inf.html#GetValue">GetValue</a></td>
                            <td>System.String GetValue(System.String, System.String, System.String)</td>
    <td>Get profile data from the ini file which the data is stores in a specific path like:  section/key</td>
  </tr>
    <tr>
                            <td><a href="../StringHelpers.html#">StringHelpers</a></td>
    <td><a href="../StringHelpers.html#FormatZero">FormatZero</a></td>
                            <td>System.String FormatZero(Int32, System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../StringHelpers.html#">StringHelpers</a></td>
    <td><a href="../StringHelpers.html#Match">Match</a></td>
                            <td>System.String Match(System.Text.RegularExpressions.Match, System.String, System.Text.RegularExpressions.RegexOptions)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../StringHelpers.html#">StringHelpers</a></td>
    <td><a href="../StringHelpers.html#Regex">Regex</a></td>
                            <td>System.String Match(System.String, System.String, System.Text.RegularExpressions.RegexOptions)</td>
    <td>Searches the specified input string for the first occurrence of the specified regular expression.</td>
  </tr>
    <tr>
                            <td><a href="../StringHelpers.html#">StringHelpers</a></td>
    <td><a href="../StringHelpers.html#Wrapper.Trim">Wrapper.Trim</a></td>
                            <td>System.String GetString(System.String, Char)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#___overloads_test()">___overloads_test()</a></td>
                            <td>System.String OverloadsTest(System.String, System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#basename">basename</a></td>
                            <td>System.String basename(System.String)</td>
    <td>Get the name property of a specific file object or folder.
If the target path is a file, then returns its file name without its extension name.</td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#cat">cat</a></td>
                            <td>System.String Cat(System.String)</td>
    <td>Read the text file data from the parameter path and then print the text data on the console.</td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#cowsay">cowsay</a></td>
                            <td>System.String Cowsay(System.String, Boolean)</td>
    <td>A cowsay trick to print the message on the console.</td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#echo">echo</a></td>
                            <td>System.String Echo(System.String)</td>
    <td>Print the message text on the terminal console.</td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#gpl">gpl</a></td>
                            <td>System.String GPL()</td>
    <td>Prints the gpl3 license to the console screen that it applied to the shoal shell.</td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#license">license</a></td>
                            <td>System.String License()</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#located">located</a></td>
                            <td>System.String Locate(System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#msgbox">msgbox</a></td>
                            <td>System.String _Msgbox(System.String, System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#pwd">pwd</a></td>
                            <td>System.String Pwd()</td>
    <td>Gets the currently working directory of shoal shell.</td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#read.txt">read.txt</a></td>
                            <td>System.String ReadTxt(System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#string.format">string.format</a></td>
                            <td>System.String Format(System.String, System.Collections.Generic.IEnumerable`1[System.Object])</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#wiki">wiki</a></td>
                            <td>System.String Wiki(System.String)</td>
    <td>https://sourceforge.net/p/shoal/wiki/search/?q=keyword</td>
  </tr>
    <tr>
                            <td><a href="../WebServices.html#">WebServices</a></td>
    <td><a href="../WebServices.html#Html.GetValue">Html.GetValue</a></td>
                            <td>System.String GetValue(System.String)</td>
    <td>Gets the string value between two wrapper character.</td>
  </tr>
    <tr>
                            <td><a href="../WebServices.html#">WebServices</a></td>
    <td><a href="../WebServices.html#Html.Href">Html.Href</a></td>
                            <td>System.String Get_href(System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../WebServices.html#">WebServices</a></td>
    <td><a href="../WebServices.html#Html.Tag.Trim">Html.Tag.Trim</a></td>
                            <td>System.String TrimHTMLTag(System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../WebServices.html#">WebServices</a></td>
    <td><a href="../WebServices.html#Webpage.Request">Webpage.Request</a></td>
                            <td>System.String Get_PageContent(System.String, UInt32, Boolean)</td>
    <td>Get the html page content from a website request or a html file on the local filesystem.</td>
  </tr>
</table>
</p></font>
	  		<font face="Microsoft YaHei" size="1.5">
		<div align="right">
			<br />	<br />	<br />
			</p>
</p><a align="left" href="#"><strong><font size=3>[&#8593;]</font></strong></a>
			<hr>
				
		<p>Copyright (c) <a href="http://gcmodeller.org">GCModeller Virtual Cell System</a>. 2015 All rights reserved.</p>
		</div></font>
	  </body>
<!DOCTYPE html>

<html lang="en">

	<head>
		
		<meta charset="utf-8">
		<title>System.Int32</title>
		
		<style>::-moz-selection {
        background: #b3d4fc;
        text-shadow: none;
      }

      ::selection {
        background: #b3d4fc;
        text-shadow: none;
      }

      html {
        padding: 30px 10px;
        font-size: 16px;
        line-height: 1.4;
        color: #737373;
        background: #f0f0f0;
        -webkit-text-size-adjust: 100%;
        -ms-text-size-adjust: 100%;
      }

      html,
      input {
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
      }

      body {
        max-width: 1500px;
        _width: 1500px;
        padding: 30px 20px 50px;
        border: 1px solid #b3b3b3;
        border-radius: 4px;
        margin: 0 auto;
        box-shadow: 0 1px 10px #a7a7a7, inset 0 1px 0 #fff;
        background: #fcfcfc;
      }

      h1 {
        margin: 0 10px;
        font-size: 35px;
        text-align: center;
      }

      h1 span {
        color: #bbb;
      }

      h3 {
        margin: 1.5em 0 0.5em;
      }

      p {
        margin: 1em 0;
      }

      ul {
        padding: 0 0 0 40px;
        margin: 1em 0;
      }

      .container {
        max-width: 900px;
        _width: 900px;
        margin: 0 auto;
      }

      /* google search */

      #goog-fixurl ul {
        list-style: none;
        padding: 0;
        margin: 0;
      }

      #goog-fixurl form {
        margin: 0;
      }

      #goog-wm-qt,
      #goog-wm-sb {
        border: 1px solid #bbb;
        font-size: 16px;
        line-height: normal;
        vertical-align: top;
        color: #444;
        border-radius: 2px;
      }

      #goog-wm-qt {
        width: 220px;
        height: 20px;
        padding: 5px;
        margin: 5px 10px 0 0;
        box-shadow: inset 0 1px 1px #ccc;
      }

      #goog-wm-sb {
        display: inline-block;
        height: 32px;
        padding: 0 10px;
        margin: 5px 0 0;
        white-space: nowrap;
        cursor: pointer;
        background-color: #f5f5f5;
        background-image: -webkit-linear-gradient(rgba(255,255,255,0), #f1f1f1);
        background-image: -moz-linear-gradient(rgba(255,255,255,0), #f1f1f1);
        background-image: -ms-linear-gradient(rgba(255,255,255,0), #f1f1f1);
        background-image: -o-linear-gradient(rgba(255,255,255,0), #f1f1f1);
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        *overflow: visible;
        *display: inline;
        *zoom: 1;
      }

      #goog-wm-sb:hover,
      #goog-wm-sb:focus {
        border-color: #aaa;
        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
        background-color: #f8f8f8;
      }

      #goog-wm-qt:hover,
      #goog-wm-qt:focus {
        border-color: #105cb6;
        outline: 0;
        color: #222;
      }

      input::-moz-focus-inner {
        padding: 0;
        border: 0;
      }</style>
	  
	  <body>
	  
	  <div class="container">
	    
	  <h1>Document for <strong>  System.Int32</strong> <span>:-)</span></h1>
	  <br />
			
	  <script>var GOOG_FIXURL_LANG = (navigator.language || '').slice(0,2),GOOG_FIXURL_SITE = location.host;</script>
	<!--  <script src="//linkhelp.clients.google.com/tbproxy/lh/wm/fixurl.js"></script> -->
	  </div>
	      	<font face="Microsoft YaHei" size="2">
	  	  <table>
  <tr>
    <th align="left">	  <p><h2><font size=5><span><a href="./index.html">< Back To Index</a></span></font></h2></p>
	</th>
    <th></th>
  </tr>
  <tr>
    <td>Type Name</td>
    <td align="left"><strong>System.Int32</strong></td>
  </tr>
 
                <tr>
    <td>Define From</td>
    <td align="left">..\</td>
  </tr>
                <tr>
    <td valign="top">Publisher</td>
    <td align="left">[Product("Microsoft® .NET Framework")]<br />[Title("mscorlib.dll")]<br />[Description("mscorlib.dll")]<br />[DefaultAlias("mscorlib.dll")]<br />[Company("Microsoft Corporation")]<br />[Copyright("© Microsoft Corporation.  All rights reserved.")]<br />[FileVersion("4.6.1038.0")]<br />[InformationalVersion("4.6.1038.0")]<br />[DelaySign((Boolean)True)]<br />[KeyFile("f:\dd\tools\devdiv\EcmaPublicKey.snk")]<br />[SignatureKey("002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df...</td>
  </tr>
                <tr>
    <td>Description</td>
    <td align="left">Int32</td>
  </tr>
  
                  <tr>
    <td></td>
    <td></td>
  </tr>
  
              
  
  </font>
</table>
<p>
	  <br />	  <br />
	  	  <br />Here list the functions which can generate this type of data, which you can reference to the function parameter:
		  <hr>
	  	<font face="Microsoft YaHei" size="2">
	  <p><table>
    <tr>
                            <th>Package Namespace</th>
    <th>API</th><th>EntryPoint</th>
    <th>Description</th>
  </tr>
    <tr>
                            <td><a href="../ColorCube.html#">ColorCube</a></td>
    <td><a href="../ColorCube.html#Brightness">Brightness</a></td>
                            <td>Int32 GetBrightness(System.Drawing.Color)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../ColorCube.html#">ColorCube</a></td>
    <td><a href="../ColorCube.html#Compare">Compare</a></td>
                            <td>Int32 Compare(System.Drawing.Color, System.Drawing.Color)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#Invoke">Invoke</a></td>
                            <td>Int32 Invoke(System.Diagnostics.Process)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#Mv.Split">Mv.Split</a></td>
                            <td>Int32 SplitMV(System.String, System.String, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#Run">Run</a></td>
                            <td>Int32 RunDriver(Microsoft.VisualBasic.ComponentModel.DataSourceModel.IObjectModel_Driver)</td>
    <td>Running the object model driver, the target object should implement the driver interface.</td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#RunCLI">RunCLI</a></td>
                            <td>Int32 RunCLI(System.Type, System.String)</td>
    <td>Running the string as cli command line and the specific type define as a interpreter.</td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#RunCLI">RunCLI</a></td>
                            <td>Int32 RunCLI(System.Type, Microsoft.VisualBasic.CommandLine.CommandLine)</td>
    <td>Running the string as cli command line and the specific type define as a interpreter.</td>
  </tr>
    <tr>
                            <td><a href="../Framework.Extensions.html#">Framework.Extensions</a></td>
    <td><a href="../Framework.Extensions.html#RunCLI">RunCLI</a></td>
                            <td>Int32 RunCLI(System.Type, Microsoft.VisualBasic.CommandLine.CommandLine, __ExecuteEmptyCli)</td>
    <td>Running the string as cli command line and the specific type define as a interpreter.</td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#BitBlt">BitBlt</a></td>
                            <td>Int32 BitBlt(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#CreateBitmap">CreateBitmap</a></td>
                            <td>Int32 CreateBitmap(Int32, Int32, Int32, Int32, System.Object)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#CreateBitmapIndirect">CreateBitmapIndirect</a></td>
                            <td>Int32 CreateBitmapIndirect(C_BITMAP)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#CreateCompatibleBitmap">CreateCompatibleBitmap</a></td>
                            <td>Int32 CreateCompatibleBitmap(Int32, Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#CreateCompatibleDC">CreateCompatibleDC</a></td>
                            <td>Int32 CreateCompatibleDC(Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#CreatePatternBrush">CreatePatternBrush</a></td>
                            <td>Int32 CreatePatternBrush(Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#CreatePen">CreatePen</a></td>
                            <td>Int32 CreatePen(Int32, Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#CreateSolidBrush">CreateSolidBrush</a></td>
                            <td>Int32 CreateSolidBrush(Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#DeleteDC">DeleteDC</a></td>
                            <td>Int32 DeleteDC(Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#DeleteObject">DeleteObject</a></td>
                            <td>Int32 DeleteObject(Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#GetMapMode">GetMapMode</a></td>
                            <td>Int32 GetMapMode(Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#GetObjectA">GetObjectA</a></td>
                            <td>Int32 GetObject(Int32, Int32, System.Object)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#GetPixel">GetPixel</a></td>
                            <td>Int32 GetPixel(Int32, Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#Polygon">Polygon</a></td>
                            <td>Int32 Polygon(Int32, System.Drawing.Point, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#Rectangle">Rectangle</a></td>
                            <td>Int32 Rectangle(Int32, Int32, Int32, Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#RestoreDC">RestoreDC</a></td>
                            <td>Int32 RestoreDC(Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#SaveDC">SaveDC</a></td>
                            <td>Int32 SaveDC(Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#SelectObject">SelectObject</a></td>
                            <td>Int32 SelectObject(Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#SetBkColor">SetBkColor</a></td>
                            <td>Int32 SetBkColor(Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#SetBkMode">SetBkMode</a></td>
                            <td>Int32 SetBkMode(Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#SetMapMode">SetMapMode</a></td>
                            <td>Int32 SetMapMode(Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#SetPixelV">SetPixelV</a></td>
                            <td>Int32 SetPixelV(Int32, Int32, Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#SetTextColor">SetTextColor</a></td>
                            <td>Int32 SetTextColor(Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../gdi32.dll.html#">gdi32.dll</a></td>
    <td><a href="../gdi32.dll.html#StretchBlt">StretchBlt</a></td>
                            <td>Int32 StretchBlt(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../kernel32.dll.html#">kernel32.dll</a></td>
    <td><a href="../kernel32.dll.html#GetSystemDirectoryA">GetSystemDirectoryA</a></td>
                            <td>Int32 GetSystemDirectory(System.String ByRef, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../kernel32.dll.html#">kernel32.dll</a></td>
    <td><a href="../kernel32.dll.html#GetWindowsDirectoryA">GetWindowsDirectoryA</a></td>
                            <td>Int32 GetWindowsDirectory(System.String ByRef, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../kernel32.dll.html#">kernel32.dll</a></td>
    <td><a href="../kernel32.dll.html#lstrlenA">lstrlenA</a></td>
                            <td>Int32 lstrlen(System.String ByRef)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../shell32.dll.html#">shell32.dll</a></td>
    <td><a href="../shell32.dll.html#ShellExecuteA">ShellExecuteA</a></td>
                            <td>Int32 ShellExecute(Int32, System.String ByRef, System.String ByRef, System.String ByRef, System.String ByRef, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../STDIO.html#">STDIO</a></td>
    <td><a href="../STDIO.html#Pause">Pause</a></td>
                            <td>Int32 Pause()</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../StringHelpers.html#">StringHelpers</a></td>
    <td><a href="../StringHelpers.html#InStr.Any">InStr.Any</a></td>
                            <td>Int32 InStrAny(System.String, System.String[])</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../StringHelpers.html#">StringHelpers</a></td>
    <td><a href="../StringHelpers.html#Located">Located</a></td>
                            <td>Int32 Located(System.Collections.Generic.IEnumerable`1[System.String], System.String, Boolean)</td>
    <td>String compares using String.Equals</td>
  </tr>
    <tr>
                            <td><a href="../StringHelpers.html#">StringHelpers</a></td>
    <td><a href="../StringHelpers.html#Lookup">Lookup</a></td>
                            <td>Int32 Lookup(System.Collections.Generic.IEnumerable`1[System.String], System.String, Boolean)</td>
    <td>Search the string by keyword in a string collection.</td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#___overloads_test()">___overloads_test()</a></td>
                            <td>Int32 OverloadsTest(Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#beep">beep</a></td>
                            <td>Int32 Beep()</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#clear">clear</a></td>
                            <td>Int32 Clear()</td>
    <td>Clear the output console.</td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#Invoke.Batch">Invoke.Batch</a></td>
                            <td>Int32 BatchInvoke(System.String, Boolean)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#Pause">Pause</a></td>
                            <td>Int32 Pause()</td>
    <td>Pause the process script, waits for user input, when user press any key on the console, then the process will be resume running.</td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#sleep">sleep</a></td>
                            <td>Int32 Sleep(Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../System.Extensions.html#">System.Extensions</a></td>
    <td><a href="../System.Extensions.html#write.array">write.array</a></td>
                            <td>Int32 WriteArray(System.Collections.Generic.IEnumerable`1[System.Object], System.String)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#DrawStateA">DrawStateA</a></td>
                            <td>Int32 DrawState(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#DrawTextA">DrawTextA</a></td>
                            <td>Int32 DrawText(Int32, System.String ByRef, Int32, RECT, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#EqualRect">EqualRect</a></td>
                            <td>Int32 EqualRect(RECT, RECT)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#FillRect">FillRect</a></td>
                            <td>Int32 FillRect(Int32, RECT, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#GetCursorPos">GetCursorPos</a></td>
                            <td>Int32 GetCursorPos(System.Drawing.Point)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#GetDC">GetDC</a></td>
                            <td>Int32 GetDC(Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#GetWindowDC">GetWindowDC</a></td>
                            <td>Int32 GetWindowDC(Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#GetWindowRect">GetWindowRect</a></td>
                            <td>Int32 GetWindowRect(Int32, RECT)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#IntersectRect">IntersectRect</a></td>
                            <td>Int32 IntersectRect(RECT, RECT, RECT)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#IsRectEmpty">IsRectEmpty</a></td>
                            <td>Int32 IsRectEmpty(RECT)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#OffsetRect">OffsetRect</a></td>
                            <td>Int32 OffsetRect(RECT, Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#ReleaseCapture">ReleaseCapture</a></td>
                            <td>Int32 ReleaseCapture()</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#ReleaseDC">ReleaseDC</a></td>
                            <td>Int32 ReleaseDC(Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#SendMessageA">SendMessageA</a></td>
                            <td>Int32 SendMessage(Int32, Int32, Int32, System.Object)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#SetCapture">SetCapture</a></td>
                            <td>Int32 SetCapture(Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#SetCursorPos">SetCursorPos</a></td>
                            <td>Int32 SetCursorPos(Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#SetRect">SetRect</a></td>
                            <td>Int32 SetRect(RECT, Int32, Int32, Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#SetWindowsHookExA">SetWindowsHookExA</a></td>
                            <td>Int32 SetWindowsHookEx(Int32, Int32, Int32, Int32)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#SubtractRect">SubtractRect</a></td>
                            <td>Int32 SubtractRect(RECT, RECT, RECT)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../user32.dll.html#">user32.dll</a></td>
    <td><a href="../user32.dll.html#UnionRect">UnionRect</a></td>
                            <td>Int32 UnionRect(RECT, RECT, RECT)</td>
    <td></td>
  </tr>
    <tr>
                            <td><a href="../winmm.dll.html#">winmm.dll</a></td>
    <td><a href="../winmm.dll.html#PlaySoundA">PlaySoundA</a></td>
                            <td>Int32 PlaySound(System.String ByRef, Int32, Int32)</td>
    <td></td>
  </tr>
</table>
</p></font>
	  		<font face="Microsoft YaHei" size="1.5">
		<div align="right">
			<br />	<br />	<br />
			</p>
</p><a align="left" href="#"><strong><font size=3>[&#8593;]</font></strong></a>
			<hr>
				
		<p>Copyright (c) <a href="http://gcmodeller.org">GCModeller Virtual Cell System</a>. 2015 All rights reserved.</p>
		</div></font>
	  </body>
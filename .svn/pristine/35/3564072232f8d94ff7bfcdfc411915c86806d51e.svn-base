
Imports Microsoft.VisualBasic.Scripting.MetaData

<[PackageNamespace]("user32.dll",
                    Description:="USER32.DLL implements the Windows USER component that creates and manipulates the standard 
                    elements of the Windows user interface, such as the desktop, windows, and menus. It thus enables programs to 
                    implement a graphical user interface (GUI) that matches the Windows look and feel. Programs call functions from 
                    Windows USER to perform operations such as creating and managing windows, receiving window messages 
                    (which are mostly user input such as mouse and keyboard events, but also notifications from the operating system), 
                    displaying text in a window, and displaying message boxes.
                    Many of the functions in USER32.DLL call upon GDI functions exported by GDI32.DLL to do the actual rendering of the 
                    various elements of the user interface. Some types of programs will also call GDI functions directly to perform lower-level 
                    drawing operations within a window previously created via USER32 functions.",
                    Publisher:="Copyright (C) 2014 Microsoft Corporation",
                    Url:="")>
Public Module User32

    <ExportAPI("SetWindowsHookExA")>
    Public Declare Function SetWindowsHookEx Lib "user32" Alias "SetWindowsHookExA" (idHook As Integer, lpfn As Integer, hmod As Integer, dwThreadId As Integer) As Integer
    <ExportAPI("SendMessageA")>
    Public Declare Function SendMessage Lib "user32" Alias "SendMessageA" (hWnd As Integer, wMsg As Integer, wParam As Integer, lParam As Object) As Integer
    <ExportAPI("SetCapture")>
    Public Declare Function SetCapture Lib "user32" (hwnd As Integer) As Integer
    <ExportAPI("ReleaseCapture")>
    Public Declare Function ReleaseCapture Lib "user32" () As Integer
    <ExportAPI("GetWindowRect")>
    Public Declare Function GetWindowRect Lib "user32" (hwnd As Integer, lpRect As RECT) As Integer
    <ExportAPI("GetCursorPos")>
    Public Declare Function GetCursorPos Lib "user32" (lpPoint As System.Drawing.Point) As Integer
    <ExportAPI("SetCursorPos")>
    Public Declare Function SetCursorPos Lib "user32" (x As Integer, y As Integer) As Integer
    <ExportAPI("DrawEdge")>
    Public Declare Function DrawEdge Lib "user32" (hdc As Integer, qrc As RECT, edge As Integer, grfFlags As Integer) As Boolean
    <ExportAPI("OffsetRect")>
    Public Declare Function OffsetRect Lib "user32" (lpRect As RECT, x As Integer, y As Integer) As Integer
    <ExportAPI("DrawTextA")>
    Public Declare Function DrawText Lib "user32" Alias "DrawTextA" (hdc As Integer, lpStr As String, nCount As Integer, lpRect As RECT, wFormat As Integer) As Integer
    <ExportAPI("GetDC")>
    Public Declare Function GetDC Lib "user32" (hwnd As Integer) As Integer
    <ExportAPI("ReleaseDC")>
    Public Declare Function ReleaseDC Lib "user32" (hwnd As Integer, hdc As Integer) As Integer
    <ExportAPI("FillRect")>
    Public Declare Function FillRect Lib "user32" (hdc As Integer, lpRect As RECT, hBrush As Integer) As Integer
    <ExportAPI("DrawStateA")>
    Public Declare Function DrawState Lib "user32" Alias "DrawStateA" (hdc As Integer, hBrush As Integer, lpDrawStateProc As Integer, lParam As Integer, wParam As Integer, n1 As Integer, n2 As Integer, n3 As Integer, n4 As Integer, un As Integer) As Integer
    <ExportAPI("GetWindowDC")>
    Public Declare Function GetWindowDC Lib "user32" (hwnd As Integer) As Integer
    <ExportAPI("IntersectRect")>
    Public Declare Function IntersectRect Lib "user32" (lpDestRect As RECT, lpSrc1Rect As RECT, lpSrc2Rect As RECT) As Integer
    <ExportAPI("SubtractRect")>
    Public Declare Function SubtractRect Lib "user32" (lprcDst As RECT, lprcSrc1 As RECT, lprcSrc2 As RECT) As Integer
    <ExportAPI("UnionRect")>
    Public Declare Function UnionRect Lib "user32" (lpDestRect As RECT, lpSrc1Rect As RECT, lpSrc2Rect As RECT) As Integer
    <ExportAPI("IsRectEmpty")>
    Public Declare Function IsRectEmpty Lib "user32" (lpRect As RECT) As Integer
    <ExportAPI("SetRect")>
    Public Declare Function SetRect Lib "user32" (lpRect As RECT, X1 As Integer, Y1 As Integer, X2 As Integer, Y2 As Integer) As Integer
    <ExportAPI("EqualRect")>
    Public Declare Function EqualRect Lib "user32" (lpRect1 As RECT, lpRect2 As RECT) As Integer

End Module
